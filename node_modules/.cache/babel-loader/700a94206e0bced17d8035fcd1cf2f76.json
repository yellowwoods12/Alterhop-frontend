{"ast":null,"code":"import _objectWithoutProperties from \"/home/yellowwoods/Documents/alterhop/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/yellowwoods/Documents/alterhop/frontend/src/components/UIComponents/Button/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Intent } from '@blueprintjs/core';\n\nvar AltButton = function AltButton(_ref) {\n  var text = _ref.text,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'submit' : _ref$type,\n      _ref$large = _ref.large,\n      large = _ref$large === void 0 ? true : _ref$large,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$loading = _ref.loading,\n      loading = _ref$loading === void 0 ? false : _ref$loading,\n      props = _objectWithoutProperties(_ref, [\"text\", \"type\", \"large\", \"disabled\", \"loading\"]);\n\n  return React.createElement(Button, Object.assign({\n    disabled: disabled,\n    className: \"alt-button\",\n    text: text,\n    type: type,\n    large: large,\n    loading: loading,\n    intent: Intent.PRIMARY\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n};\n\nvar bool = PropTypes.bool,\n    string = PropTypes.string;\nAltButton.propTypes = {\n  text: string,\n  type: string,\n  large: bool,\n  disabled: bool,\n  loading: bool\n};\nexport { AltButton };","map":{"version":3,"sources":["/home/yellowwoods/Documents/alterhop/frontend/src/components/UIComponents/Button/index.js"],"names":["React","PropTypes","Button","Intent","AltButton","text","type","large","disabled","loading","props","PRIMARY","bool","string","propTypes"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,mBAA/B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA0F;AAAA,MAAvFC,IAAuF,QAAvFA,IAAuF;AAAA,uBAAjFC,IAAiF;AAAA,MAAjFA,IAAiF,0BAA1E,QAA0E;AAAA,wBAAhEC,KAAgE;AAAA,MAAhEA,KAAgE,2BAAxD,IAAwD;AAAA,2BAAlDC,QAAkD;AAAA,MAAlDA,QAAkD,8BAAvC,KAAuC;AAAA,0BAAhCC,OAAgC;AAAA,MAAhCA,OAAgC,6BAAtB,KAAsB;AAAA,MAAZC,KAAY;;AAC3G,SACC,oBAAC,MAAD;AACC,IAAA,QAAQ,EAAEF,QADX;AAEC,IAAA,SAAS,EAAC,YAFX;AAGC,IAAA,IAAI,EAAEH,IAHP;AAIC,IAAA,IAAI,EAAEC,IAJP;AAKC,IAAA,KAAK,EAAEC,KALR;AAMC,IAAA,OAAO,EAAEE,OANV;AAOC,IAAA,MAAM,EAAEN,MAAM,CAACQ;AAPhB,KAQKD,KARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD;AAYA,CAbD;;IAeQE,I,GAAiBX,S,CAAjBW,I;IAAMC,M,GAAWZ,S,CAAXY,M;AAEdT,SAAS,CAACU,SAAV,GAAsB;AACrBT,EAAAA,IAAI,EAAEQ,MADe;AAErBP,EAAAA,IAAI,EAAEO,MAFe;AAGrBN,EAAAA,KAAK,EAAEK,IAHc;AAIrBJ,EAAAA,QAAQ,EAAEI,IAJW;AAKrBH,EAAAA,OAAO,EAAEG;AALY,CAAtB;AAOA,SAASR,SAAT","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Intent } from '@blueprintjs/core'\n\nconst AltButton = ({ text, type = 'submit', large = true, disabled = false, loading = false, ...props }) => {\n\treturn (\n\t\t<Button\n\t\t\tdisabled={disabled}\n\t\t\tclassName=\"alt-button\"\n\t\t\ttext={text}\n\t\t\ttype={type}\n\t\t\tlarge={large}\n\t\t\tloading={loading}\n\t\t\tintent={Intent.PRIMARY}\n\t\t\t{...props}\n\t\t/>\n\t)\n}\n\nconst { bool, string } = PropTypes\n\nAltButton.propTypes = {\n\ttext: string,\n\ttype: string,\n\tlarge: bool,\n\tdisabled: bool,\n\tloading: bool\n}\nexport { AltButton }\n"]},"metadata":{},"sourceType":"module"}