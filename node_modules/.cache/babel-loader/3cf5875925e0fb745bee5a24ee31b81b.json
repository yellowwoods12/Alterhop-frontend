{"ast":null,"code":"import _regeneratorRuntime from \"/home/yellowwoods/Documents/alterhop/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/yellowwoods/Documents/alterhop/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/yellowwoods/Documents/alterhop/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/yellowwoods/Documents/alterhop/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/yellowwoods/Documents/alterhop/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/yellowwoods/Documents/alterhop/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/yellowwoods/Documents/alterhop/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/yellowwoods/Documents/alterhop/frontend/src/containers/Login/index.js\";\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { showToast } from '../ToastMessage';\nimport LoginForm from '../../components/LoginForm';\nimport { postLogin, clearLoginError } from './action';\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.timer = null;\n    _this.state = {\n      loading: false,\n      signupto: ''\n    };\n\n    _this.submit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(values) {\n        var pathname, _this$props, _this$props$loginRedu, err, loggedIn, message, _clearLoginError;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                pathname = _this.props.location.pathname;\n\n                _this.setState({\n                  loading: true\n                });\n\n                if (!pathname.split('/').includes('student')) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 5;\n                return _this.props.postLogin(values, 'https://api.alterhop.com/api/v1/user/signin', 'student');\n\n              case 5:\n                // this.props.history.push('/')\n                _this.setState({\n                  loading: false\n                });\n\n                _this$props = _this.props, _this$props$loginRedu = _this$props.loginReducer, err = _this$props$loginRedu.err, loggedIn = _this$props$loginRedu.loggedIn, message = _this$props$loginRedu.message, _clearLoginError = _this$props.clearLoginError;\n\n                if (!err) {\n                  _context.next = 9;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", showToast(err, _clearLoginError, true));\n\n              case 9:\n                if (loggedIn && message) {\n                  showToast(message, _clearLoginError);\n                  _this.timer = setTimeout(function () {\n                    _this.props.history.push('/');\n                  }, 1000);\n                }\n\n              case 10:\n                if (!pathname.split('/').includes('company')) {\n                  _context.next = 15;\n                  break;\n                }\n\n                // company login\n                values.type = 'company';\n                _context.next = 14;\n                return _this.props.postLogin(values, 'https://api.alterhop.com/api/v1/company/signin', 'company');\n\n              case 14:\n                _this.props.history.push('/company/profile');\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var pathname = this.props.location.pathname;\n\n      if (pathname.split('/').includes('student')) {\n        this.setState({\n          signupto: '/signup/student'\n        });\n      }\n\n      if (pathname.split('/').includes('company')) {\n        this.setState({\n          signupto: '/signup/company'\n        });\n      }\n\n      if (this.props.loginReducer.loggedIn && this.props.loginReducer.type === 'student') {\n        this.props.history.push('/');\n      }\n\n      if (this.props.loginReducer.loggedIn && this.props.loginReducer.type === 'company') {\n        this.props.history.push('/company/profile');\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.timer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var loading = this.state.loading;\n      return React.createElement(LoginForm, {\n        onSubmit: this.submit,\n        loading: loading,\n        signupto: this.state.signupto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loginReducer: state.loginReducer\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    postLogin: postLogin,\n    clearLoginError: clearLoginError\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/yellowwoods/Documents/alterhop/frontend/src/containers/Login/index.js"],"names":["React","bindActionCreators","connect","showToast","LoginForm","postLogin","clearLoginError","Login","timer","state","loading","signupto","submit","values","pathname","props","location","setState","split","includes","loginReducer","err","loggedIn","message","setTimeout","history","push","type","clearTimeout","Component","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,SAAT,EAAoBC,eAApB,QAA2C,UAA3C;;IAEMC,K;;;;;;;;;;;;;;;;;UACLC,K,GAAQ,I;UACRC,K,GAAQ;AACPC,MAAAA,OAAO,EAAE,KADF;AAEPC,MAAAA,QAAQ,EAAE;AAFH,K;;UA+BRC,M;;;;;+BAAS,iBAAOC,MAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEKC,gBAAAA,QAFL,GAGJ,MAAKC,KAHD,CAEPC,QAFO,CAEKF,QAFL;;AAIR,sBAAKG,QAAL,CAAc;AAAEP,kBAAAA,OAAO,EAAE;AAAX,iBAAd;;AAJQ,qBAKJI,QAAQ,CAACI,KAAT,CAAe,GAAf,EAAoBC,QAApB,CAA6B,SAA7B,CALI;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAOD,MAAKJ,KAAL,CAAWV,SAAX,CAAqBQ,MAArB,EAA6B,6CAA7B,EAA4E,SAA5E,CAPC;;AAAA;AAQP;AACA,sBAAKI,QAAL,CAAc;AAAEP,kBAAAA,OAAO,EAAE;AAAX,iBAAd;;AATO,8BAaH,MAAKK,KAbF,sCAWNK,YAXM,EAWUC,GAXV,yBAWUA,GAXV,EAWeC,QAXf,yBAWeA,QAXf,EAWyBC,OAXzB,yBAWyBA,OAXzB,EAYNjB,gBAZM,eAYNA,eAZM;;AAAA,qBAcHe,GAdG;AAAA;AAAA;AAAA;;AAAA,iDAeClB,SAAS,CAACkB,GAAD,EAAMf,gBAAN,EAAuB,IAAvB,CAfV;;AAAA;AAiBP,oBAAIgB,QAAQ,IAAIC,OAAhB,EAAyB;AACxBpB,kBAAAA,SAAS,CAACoB,OAAD,EAAUjB,gBAAV,CAAT;AACA,wBAAKE,KAAL,GAAagB,UAAU,CAAC,YAAM;AAC7B,0BAAKT,KAAL,CAAWU,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACA,mBAFsB,EAEpB,IAFoB,CAAvB;AAGA;;AAtBM;AAAA,qBAwBJZ,QAAQ,CAACI,KAAT,CAAe,GAAf,EAAoBC,QAApB,CAA6B,SAA7B,CAxBI;AAAA;AAAA;AAAA;;AAyBP;AACAN,gBAAAA,MAAM,CAACc,IAAP,GAAc,SAAd;AA1BO;AAAA,uBA2BD,MAAKZ,KAAL,CAAWV,SAAX,CAAqBQ,MAArB,EAA6B,gDAA7B,EAA+E,SAA/E,CA3BC;;AAAA;AA4BP,sBAAKE,KAAL,CAAWU,OAAX,CAAmBC,IAAnB,CAAwB,kBAAxB;;AA5BO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;yCA1BY;AAAA,UAEPZ,QAFO,GAGhB,KAAKC,KAHW,CAEnBC,QAFmB,CAEPF,QAFO;;AAIpB,UAAIA,QAAQ,CAACI,KAAT,CAAe,GAAf,EAAoBC,QAApB,CAA6B,SAA7B,CAAJ,EAA6C;AAC5C,aAAKF,QAAL,CAAc;AACbN,UAAAA,QAAQ,EAAE;AADG,SAAd;AAGA;;AACD,UAAIG,QAAQ,CAACI,KAAT,CAAe,GAAf,EAAoBC,QAApB,CAA6B,SAA7B,CAAJ,EAA6C;AAC5C,aAAKF,QAAL,CAAc;AACbN,UAAAA,QAAQ,EAAE;AADG,SAAd;AAGA;;AACD,UAAI,KAAKI,KAAL,CAAWK,YAAX,CAAwBE,QAAxB,IAAoC,KAAKP,KAAL,CAAWK,YAAX,CAAwBO,IAAxB,KAAiC,SAAzE,EAAoF;AACnF,aAAKZ,KAAL,CAAWU,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACA;;AACD,UAAI,KAAKX,KAAL,CAAWK,YAAX,CAAwBE,QAAxB,IAAoC,KAAKP,KAAL,CAAWK,YAAX,CAAwBO,IAAxB,KAAiC,SAAzE,EAAoF;AACnF,aAAKZ,KAAL,CAAWU,OAAX,CAAmBC,IAAnB,CAAwB,kBAAxB;AACA;AACD;;;2CAEsB;AACtBE,MAAAA,YAAY,CAAC,KAAKpB,KAAN,CAAZ;AACA;;;6BAiCQ;AAAA,UACAE,OADA,GACY,KAAKD,KADjB,CACAC,OADA;AAER,aAAO,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,KAAKE,MAA1B;AAAkC,QAAA,OAAO,EAAEF,OAA3C;AAAoD,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA;;;;EAnEkBX,KAAK,CAAC6B,S;;AAsE1B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACrB,KAAD,EAAW;AAClC,SAAO;AACNW,IAAAA,YAAY,EAAEX,KAAK,CAACW;AADd,GAAP;AAGA,CAJD;;AAKA,IAAMW,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACxC,SAAO/B,kBAAkB,CAAC;AAAEI,IAAAA,SAAS,EAATA,SAAF;AAAaC,IAAAA,eAAe,EAAfA;AAAb,GAAD,EAAiC0B,QAAjC,CAAzB;AACA,CAFD;;AAGA,eAAe9B,OAAO,CACrB4B,eADqB,EAErBC,kBAFqB,CAAP,CAGbxB,KAHa,CAAf","sourcesContent":["import React from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { showToast } from '../ToastMessage'\nimport LoginForm from '../../components/LoginForm'\nimport { postLogin, clearLoginError } from './action'\n\nclass Login extends React.Component {\n\ttimer = null\n\tstate = {\n\t\tloading: false,\n\t\tsignupto: ''\n\t}\n\n\tcomponentWillMount() {\n\t\tconst {\n\t\t\tlocation: { pathname }\n\t\t} = this.props\n\t\tif (pathname.split('/').includes('student')) {\n\t\t\tthis.setState({\n\t\t\t\tsignupto: '/signup/student'\n\t\t\t})\n\t\t}\n\t\tif (pathname.split('/').includes('company')) {\n\t\t\tthis.setState({\n\t\t\t\tsignupto: '/signup/company'\n\t\t\t})\n\t\t}\n\t\tif (this.props.loginReducer.loggedIn && this.props.loginReducer.type === 'student') {\n\t\t\tthis.props.history.push('/')\n\t\t}\n\t\tif (this.props.loginReducer.loggedIn && this.props.loginReducer.type === 'company') {\n\t\t\tthis.props.history.push('/company/profile')\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.timer)\n\t}\n\n\tsubmit = async (values) => {\n\t\tconst {\n\t\t\tlocation: { pathname }\n\t\t} = this.props\n\t\tthis.setState({ loading: true })\n\t\tif (pathname.split('/').includes('student')) {\n\t\t\t// student signin\n\t\t\tawait this.props.postLogin(values, 'https://api.alterhop.com/api/v1/user/signin', 'student')\n\t\t\t// this.props.history.push('/')\n\t\t\tthis.setState({ loading: false })\n\t\t\tconst {\n\t\t\t\tloginReducer: { err, loggedIn, message },\n\t\t\t\tclearLoginError\n\t\t\t} = this.props\n\t\t\tif (err) {\n\t\t\t\treturn showToast(err, clearLoginError, true)\n\t\t\t}\n\t\t\tif (loggedIn && message) {\n\t\t\t\tshowToast(message, clearLoginError)\n\t\t\t\tthis.timer = setTimeout(() => {\n\t\t\t\t\tthis.props.history.push('/')\n\t\t\t\t}, 1000)\n\t\t\t}\n\t\t}\n\t\tif (pathname.split('/').includes('company')) {\n\t\t\t// company login\n\t\t\tvalues.type = 'company'\n\t\t\tawait this.props.postLogin(values, 'https://api.alterhop.com/api/v1/company/signin', 'company')\n\t\t\tthis.props.history.push('/company/profile')\n\t\t}\n\t}\n\trender() {\n\t\tconst { loading } = this.state\n\t\treturn <LoginForm onSubmit={this.submit} loading={loading} signupto={this.state.signupto} />\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tloginReducer: state.loginReducer\n\t}\n}\nconst mapDispatchToProps = (dispatch) => {\n\treturn bindActionCreators({ postLogin, clearLoginError }, dispatch)\n}\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(Login)\n"]},"metadata":{},"sourceType":"module"}