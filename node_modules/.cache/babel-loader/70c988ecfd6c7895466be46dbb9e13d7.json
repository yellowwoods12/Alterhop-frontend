{"ast":null,"code":"var _jsxFileName = \"/home/yellowwoods/Documents/alterhop/frontend/src/components/UIComponents/TextArea/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroup, TextArea, Intent } from '@blueprintjs/core';\n\nvar AltTextArea = function AltTextArea(_ref) {\n  var _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$classes = _ref.classes,\n      classes = _ref$classes === void 0 ? '' : _ref$classes,\n      placeholder = _ref.placeholder,\n      label = _ref.label,\n      input = _ref.input,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error,\n      warning = _ref$meta.warning;\n  return React.createElement(FormGroup, {\n    label: label,\n    labelFor: input.name,\n    className: \"alt-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(TextArea, Object.assign({\n    large: true,\n    intent: touched ? error ? Intent.DANGER : Intent.PRIMARY : Intent.PRIMARY,\n    disabled: disabled,\n    autoComplete: \"off\",\n    className: \"bp3-fill alt-input-group \".concat(classes)\n  }, input, {\n    placeholder: placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })), touched && (error && React.createElement(\"span\", {\n    className: \"alt-form-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, error) || warning && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, warning)));\n};\n\nvar bool = PropTypes.bool,\n    string = PropTypes.string,\n    object = PropTypes.object;\nAltTextArea.propTypes = {\n  disabled: bool,\n  classes: string,\n  placeholder: string,\n  label: string,\n  type: string,\n  input: object.isRequired,\n  meta: object.isRequired\n};\nexport { AltTextArea };","map":{"version":3,"sources":["/home/yellowwoods/Documents/alterhop/frontend/src/components/UIComponents/TextArea/index.js"],"names":["React","PropTypes","FormGroup","TextArea","Intent","AltTextArea","disabled","classes","placeholder","label","input","meta","touched","error","warning","name","DANGER","PRIMARY","bool","string","object","propTypes","type","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,mBAA5C;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,2BACnBC,QADmB;AAAA,MACnBA,QADmB,8BACR,KADQ;AAAA,0BAEnBC,OAFmB;AAAA,MAEnBA,OAFmB,6BAET,EAFS;AAAA,MAGnBC,WAHmB,QAGnBA,WAHmB;AAAA,MAInBC,KAJmB,QAInBA,KAJmB;AAAA,MAKnBC,KALmB,QAKnBA,KALmB;AAAA,uBAMnBC,IANmB;AAAA,MAMXC,OANW,aAMXA,OANW;AAAA,MAMFC,KANE,aAMFA,KANE;AAAA,MAMKC,OANL,aAMKA,OANL;AAAA,SAQnB,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEL,KAAlB;AAAyB,IAAA,QAAQ,EAAEC,KAAK,CAACK,IAAzC;AAA+C,IAAA,SAAS,EAAC,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,QAAD;AACC,IAAA,KAAK,EAAE,IADR;AAEC,IAAA,MAAM,EAAEH,OAAO,GAAIC,KAAK,GAAGT,MAAM,CAACY,MAAV,GAAmBZ,MAAM,CAACa,OAAnC,GAA8Cb,MAAM,CAACa,OAFrE;AAGC,IAAA,QAAQ,EAAEX,QAHX;AAIC,IAAA,YAAY,EAAC,KAJd;AAKC,IAAA,SAAS,qCAA8BC,OAA9B;AALV,KAMKG,KANL;AAOC,IAAA,WAAW,EAAEF,WAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,EAUEI,OAAO,KAAMC,KAAK,IAAI;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCA,KAAlC,CAAV,IAA+DC,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,OAAP,CAA/E,CAVT,CARmB;AAAA,CAApB;;IAsBQI,I,GAAyBjB,S,CAAzBiB,I;IAAMC,M,GAAmBlB,S,CAAnBkB,M;IAAQC,M,GAAWnB,S,CAAXmB,M;AAEtBf,WAAW,CAACgB,SAAZ,GAAwB;AACvBf,EAAAA,QAAQ,EAAEY,IADa;AAEvBX,EAAAA,OAAO,EAAEY,MAFc;AAGvBX,EAAAA,WAAW,EAAEW,MAHU;AAIvBV,EAAAA,KAAK,EAAEU,MAJgB;AAKvBG,EAAAA,IAAI,EAAEH,MALiB;AAMvBT,EAAAA,KAAK,EAAEU,MAAM,CAACG,UANS;AAOvBZ,EAAAA,IAAI,EAAES,MAAM,CAACG;AAPU,CAAxB;AAUA,SAASlB,WAAT","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FormGroup, TextArea, Intent } from '@blueprintjs/core'\n\nconst AltTextArea = ({\n\tdisabled = false,\n\tclasses = '',\n\tplaceholder,\n\tlabel,\n\tinput,\n\tmeta: { touched, error, warning }\n}) => (\n\t<FormGroup label={label} labelFor={input.name} className=\"alt-input\">\n\t\t<TextArea\n\t\t\tlarge={true}\n\t\t\tintent={touched ? (error ? Intent.DANGER : Intent.PRIMARY) : Intent.PRIMARY}\n\t\t\tdisabled={disabled}\n\t\t\tautoComplete=\"off\"\n\t\t\tclassName={`bp3-fill alt-input-group ${classes}`}\n\t\t\t{...input}\n\t\t\tplaceholder={placeholder}\n\t\t/>\n\t\t{touched && ((error && <span className=\"alt-form-error\">{error}</span>) || (warning && <span>{warning}</span>))}\n\t</FormGroup>\n)\n\nconst { bool, string, object } = PropTypes\n\nAltTextArea.propTypes = {\n\tdisabled: bool,\n\tclasses: string,\n\tplaceholder: string,\n\tlabel: string,\n\ttype: string,\n\tinput: object.isRequired,\n\tmeta: object.isRequired\n}\n\nexport { AltTextArea }\n"]},"metadata":{},"sourceType":"module"}