{"ast":null,"code":"var _jsxFileName = \"/home/yellowwoods/Documents/alterhop/frontend/src/components/Forgot/Password.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Divider } from '@blueprintjs/core';\nimport logo from '../StaticHomepage/images/AlterhopLogo-2.png';\nimport { AltField } from '../UIComponents/InputTypes';\nimport { AltButton } from '../UIComponents/Button';\nimport { required, email } from '../UIComponents/validate';\n\nvar PasswordResetForm = function PasswordResetForm(props) {\n  var handleSubmit = props.handleSubmit,\n      loading = props.loading,\n      sentToken = props.sentToken;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"alt-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"alt-form-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Type your Email address\"), React.createElement(\"img\", {\n    src: logo,\n    title: \"alterhop\",\n    alt: \"alterhop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), sentToken && React.createElement(Field, {\n    name: \"token\",\n    type: \"text\",\n    component: AltField,\n    label: \"token\",\n    validate: [required],\n    placeholder: \"Enter then token\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), !sentToken && React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    component: AltField,\n    label: \"email\",\n    validate: [required, email],\n    placeholder: \"Enter your email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"alt-form-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(AltButton, {\n    loading: loading,\n    disabled: loading,\n    type: \"submit\",\n    text: sentToken ? 'Verify' : 'Send Token',\n    large: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))));\n};\n\nvar func = PropTypes.func,\n    bool = PropTypes.bool,\n    string = PropTypes.string,\n    object = PropTypes.object;\nPasswordResetForm.propTypes = {\n  loading: bool,\n  handleSubmit: func.isRequired,\n  sentToken: bool\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    err: state.loginReducer.err\n  };\n};\n\nPasswordResetForm = reduxForm({\n  form: 'passwordResetForm'\n})(PasswordResetForm);\nexport default withRouter(connect(mapStateToProps)(PasswordResetForm));","map":{"version":3,"sources":["/home/yellowwoods/Documents/alterhop/frontend/src/components/Forgot/Password.js"],"names":["React","PropTypes","Link","withRouter","connect","Field","reduxForm","Divider","logo","AltField","AltButton","required","email","PasswordResetForm","props","handleSubmit","loading","sentToken","func","bool","string","object","propTypes","isRequired","mapStateToProps","state","err","loginReducer","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\nimport { Divider } from '@blueprintjs/core'\n\nimport logo from '../StaticHomepage/images/AlterhopLogo-2.png'\nimport { AltField } from '../UIComponents/InputTypes'\nimport { AltButton } from '../UIComponents/Button'\nimport { required, email } from '../UIComponents/validate'\n\nlet PasswordResetForm = (props) => {\n\tconst { handleSubmit, loading, sentToken } = props\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={handleSubmit} className=\"alt-form\">\n\t\t\t\t<div className=\"alt-form-title\">\n\t\t\t\t\t<h3>Type your Email address</h3>\n\t\t\t\t\t<img src={logo} title=\"alterhop\" alt=\"alterhop\" />\n\t\t\t\t</div>\n\t\t\t\t{sentToken && (\n\t\t\t\t\t<Field\n\t\t\t\t\t\tname=\"token\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tcomponent={AltField}\n\t\t\t\t\t\tlabel=\"token\"\n\t\t\t\t\t\tvalidate={[required]}\n\t\t\t\t\t\tplaceholder=\"Enter then token\"\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{!sentToken && (\n\t\t\t\t\t<Field\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tcomponent={AltField}\n\t\t\t\t\t\tlabel=\"email\"\n\t\t\t\t\t\tvalidate={[required, email]}\n\t\t\t\t\t\tplaceholder=\"Enter your email\"\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<div className=\"alt-form-btn\">\n\t\t\t\t\t<AltButton\n\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\ttext={sentToken ? 'Verify' : 'Send Token'}\n\t\t\t\t\t\tlarge={true}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nconst { func, bool, string, object } = PropTypes\n\nPasswordResetForm.propTypes = {\n\tloading: bool,\n\thandleSubmit: func.isRequired,\n\tsentToken: bool\n}\n\nconst mapStateToProps = (state) => ({\n\terr: state.loginReducer.err\n})\n\nPasswordResetForm = reduxForm({\n\tform: 'passwordResetForm'\n})(PasswordResetForm)\n\nexport default withRouter(connect(mapStateToProps)(PasswordResetForm))\n"]},"metadata":{},"sourceType":"module"}