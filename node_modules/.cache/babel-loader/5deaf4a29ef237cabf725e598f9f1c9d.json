{"ast":null,"code":"var _jsxFileName = \"/home/yellowwoods/Documents/alterhop/frontend/src/components/PageLoader/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Spinner, Intent, H4 } from '@blueprintjs/core';\nimport './style.scss';\n\nvar Loading = function Loading(props) {\n  var _props$size = props.size,\n      size = _props$size === void 0 ? 50 : _props$size;\n\n  if (props.error) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Error! \", React.createElement(\"button\", {\n      onClick: props.retry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Retry\"));\n  } else if (props.timedOut) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Taking a long time... \", React.createElement(\"button\", {\n      onClick: props.retry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Retry\"));\n  } else if (props.pastDelay) {\n    return React.createElement(\"div\", {\n      className: \"alt-loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      intent: Intent.PRIMARY,\n      size: size,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(H4, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Loading ...\"));\n  } else {\n    return null;\n  }\n};\n\nvar number = PropTypes.number,\n    string = PropTypes.string,\n    func = PropTypes.func,\n    bool = PropTypes.bool,\n    object = PropTypes.object;\nLoading.propTypes = {\n  size: number,\n  error: object,\n  pastDelay: bool,\n  retry: func\n};\nexport default Loading;","map":{"version":3,"sources":["/home/yellowwoods/Documents/alterhop/frontend/src/components/PageLoader/index.js"],"names":["React","PropTypes","Spinner","Intent","H4","Loading","props","size","error","retry","timedOut","pastDelay","PRIMARY","number","string","func","bool","object","propTypes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,EAA1B,QAAoC,mBAApC;AACA,OAAO,cAAP;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAAA,oBACJA,KADI,CAClBC,IADkB;AAAA,MAClBA,IADkB,4BACX,EADW;;AAG1B,MAAID,KAAK,CAACE,KAAV,EAAiB;AAChB,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAQ,MAAA,OAAO,EAAEF,KAAK,CAACG,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADR,CADD;AAKA,GAND,MAMO,IAAIH,KAAK,CAACI,QAAV,EAAoB;AAC1B,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACuB;AAAQ,MAAA,OAAO,EAAEJ,KAAK,CAACG,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADvB,CADD;AAKA,GANM,MAMA,IAAIH,KAAK,CAACK,SAAV,EAAqB;AAC3B,WACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAER,MAAM,CAACS,OAAxB;AAAiC,MAAA,IAAI,EAAEL,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGC,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHD,CADD;AAOA,GARM,MAQA;AACN,WAAO,IAAP;AACA;AACD,CA1BD;;IA4BQM,M,GAAuCZ,S,CAAvCY,M;IAAQC,M,GAA+Bb,S,CAA/Ba,M;IAAQC,I,GAAuBd,S,CAAvBc,I;IAAMC,I,GAAiBf,S,CAAjBe,I;IAAMC,M,GAAWhB,S,CAAXgB,M;AAEpCZ,OAAO,CAACa,SAAR,GAAoB;AACnBX,EAAAA,IAAI,EAAEM,MADa;AAEnBL,EAAAA,KAAK,EAAES,MAFY;AAGnBN,EAAAA,SAAS,EAAEK,IAHQ;AAInBP,EAAAA,KAAK,EAAEM;AAJY,CAApB;AAMA,eAAeV,OAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Spinner, Intent, H4 } from '@blueprintjs/core'\nimport './style.scss'\n\nconst Loading = (props) => {\n\tconst { size = 50 } = props\n\n\tif (props.error) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\tError! <button onClick={props.retry}>Retry</button>\n\t\t\t</div>\n\t\t)\n\t} else if (props.timedOut) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\tTaking a long time... <button onClick={props.retry}>Retry</button>\n\t\t\t</div>\n\t\t)\n\t} else if (props.pastDelay) {\n\t\treturn (\n\t\t\t<div className=\"alt-loader\">\n\t\t\t\t<Spinner intent={Intent.PRIMARY} size={size} />\n\t\t\t\t<br />\n\t\t\t\t<H4>Loading ...</H4>\n\t\t\t</div>\n\t\t)\n\t} else {\n\t\treturn null\n\t}\n}\n\nconst { number, string, func, bool, object } = PropTypes\n\nLoading.propTypes = {\n\tsize: number,\n\terror: object,\n\tpastDelay: bool,\n\tretry: func\n}\nexport default Loading\n"]},"metadata":{},"sourceType":"module"}