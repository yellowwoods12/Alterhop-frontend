{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN, LOGIN_ERROR, LOGOUT, CLEAR_LOGIN_ERR } from './types';\n/**\n * [login reducer]\n * @param  {[Object]} payload [{ token: ''}]\n * @return {[reducer]}         [login reducer]\n */\n\nexport var login = function login(payload) {\n  return {\n    type: LOGIN,\n    payload: payload\n  };\n};\n/**\n * [loginError reducer]\n * @param  {[Object]} payload [{ err: 'some error'}]\n * @return {[reducer]}         [error reducer]\n */\n\nexport var loginError = function loginError(payload) {\n  return {\n    type: LOGIN_ERROR,\n    payload: payload\n  };\n};\nexport var postLogin = function postLogin(values, url, type) {\n  return function (dispatch) {\n    return axios.post(url, values).then(function (res) {\n      if (res.status === 200) {\n        var data = res.data;\n        data.type = type;\n        dispatch(login(data));\n      } else {\n        dispatch(loginError({\n          err: res.data.message\n        }));\n      }\n    }).catch(function (err) {\n      var re = /40\\d/;\n\n      if (re.test(err.response.status)) {\n        dispatch(loginError({\n          err: err.response.data.message\n        }));\n      } else {\n        dispatch(loginError({\n          err: err.message\n        }));\n      }\n    });\n  };\n};\nexport var logout = function logout() {\n  return {\n    type: LOGOUT\n  };\n};\nexport var clearLoginError = function clearLoginError() {\n  return {\n    type: CLEAR_LOGIN_ERR\n  };\n};","map":{"version":3,"sources":["/home/yellowwoods/Documents/alterhop/frontend/src/containers/Login/action.js"],"names":["axios","LOGIN","LOGIN_ERROR","LOGOUT","CLEAR_LOGIN_ERR","login","payload","type","loginError","postLogin","values","url","dispatch","post","then","res","status","data","err","message","catch","re","test","response","logout","clearLoginError"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,MAA7B,EAAqCC,eAArC,QAA4D,SAA5D;AAEA;;;;;;AAKA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,OAAD;AAAA,SAAc;AAClCC,IAAAA,IAAI,EAAEN,KAD4B;AAElCK,IAAAA,OAAO,EAAPA;AAFkC,GAAd;AAAA,CAAd;AAKP;;;;;;AAKA,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACF,OAAD;AAAA,SAAc;AACvCC,IAAAA,IAAI,EAAEL,WADiC;AAEvCI,IAAAA,OAAO,EAAPA;AAFuC,GAAd;AAAA,CAAnB;AAKP,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAASC,GAAT,EAAcJ,IAAd;AAAA,SAAuB,UAACK,QAAD,EAAc;AAC7D,WAAOZ,KAAK,CACVa,IADK,CACAF,GADA,EACKD,MADL,EAELI,IAFK,CAEA,UAACC,GAAD,EAAS;AACd,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACvB,YAAMC,IAAI,GAAGF,GAAG,CAACE,IAAjB;AACAA,QAAAA,IAAI,CAACV,IAAL,GAAYA,IAAZ;AACAK,QAAAA,QAAQ,CAACP,KAAK,CAACY,IAAD,CAAN,CAAR;AACA,OAJD,MAIO;AACNL,QAAAA,QAAQ,CAACJ,UAAU,CAAC;AAAEU,UAAAA,GAAG,EAAEH,GAAG,CAACE,IAAJ,CAASE;AAAhB,SAAD,CAAX,CAAR;AACA;AACD,KAVK,EAWLC,KAXK,CAWC,UAACF,GAAD,EAAS;AACf,UAAMG,EAAE,GAAG,MAAX;;AACA,UAAIA,EAAE,CAACC,IAAH,CAAQJ,GAAG,CAACK,QAAJ,CAAaP,MAArB,CAAJ,EAAkC;AACjCJ,QAAAA,QAAQ,CAACJ,UAAU,CAAC;AAAEU,UAAAA,GAAG,EAAEA,GAAG,CAACK,QAAJ,CAAaN,IAAb,CAAkBE;AAAzB,SAAD,CAAX,CAAR;AACA,OAFD,MAEO;AACNP,QAAAA,QAAQ,CAACJ,UAAU,CAAC;AAAEU,UAAAA,GAAG,EAAEA,GAAG,CAACC;AAAX,SAAD,CAAX,CAAR;AACA;AACD,KAlBK,CAAP;AAmBA,GApBwB;AAAA,CAAlB;AAsBP,OAAO,IAAMK,MAAM,GAAG,SAATA,MAAS,GAAM;AAC3B,SAAO;AACNjB,IAAAA,IAAI,EAAEJ;AADA,GAAP;AAGA,CAJM;AAMP,OAAO,IAAMsB,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACpC,SAAO;AACNlB,IAAAA,IAAI,EAAEH;AADA,GAAP;AAGA,CAJM","sourcesContent":["import axios from 'axios'\nimport { LOGIN, LOGIN_ERROR, LOGOUT, CLEAR_LOGIN_ERR } from './types'\n\n/**\n * [login reducer]\n * @param  {[Object]} payload [{ token: ''}]\n * @return {[reducer]}         [login reducer]\n */\nexport const login = (payload) => ({\n\ttype: LOGIN,\n\tpayload\n})\n\n/**\n * [loginError reducer]\n * @param  {[Object]} payload [{ err: 'some error'}]\n * @return {[reducer]}         [error reducer]\n */\nexport const loginError = (payload) => ({\n\ttype: LOGIN_ERROR,\n\tpayload\n})\n\nexport const postLogin = (values, url, type) => (dispatch) => {\n\treturn axios\n\t\t.post(url, values)\n\t\t.then((res) => {\n\t\t\tif (res.status === 200) {\n\t\t\t\tconst data = res.data\n\t\t\t\tdata.type = type\n\t\t\t\tdispatch(login(data))\n\t\t\t} else {\n\t\t\t\tdispatch(loginError({ err: res.data.message }))\n\t\t\t}\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconst re = /40\\d/\n\t\t\tif (re.test(err.response.status)) {\n\t\t\t\tdispatch(loginError({ err: err.response.data.message }))\n\t\t\t} else {\n\t\t\t\tdispatch(loginError({ err: err.message }))\n\t\t\t}\n\t\t})\n}\n\nexport const logout = () => {\n\treturn {\n\t\ttype: LOGOUT\n\t}\n}\n\nexport const clearLoginError = () => {\n\treturn {\n\t\ttype: CLEAR_LOGIN_ERR\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}