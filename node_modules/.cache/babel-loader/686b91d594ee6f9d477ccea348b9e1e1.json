{"ast":null,"code":"import _classCallCheck from \"/home/yellowwoods/Documents/alterhop/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/yellowwoods/Documents/alterhop/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/yellowwoods/Documents/alterhop/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/yellowwoods/Documents/alterhop/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/yellowwoods/Documents/alterhop/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/yellowwoods/Documents/alterhop/frontend/src/components/SignupForm/index.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Divider, FormGroup } from '@blueprintjs/core';\nimport logo from '../StaticHomepage/images/AlterhopLogo-2.png';\nimport { AltField } from '../UIComponents/InputTypes';\nimport { AltButton } from '../UIComponents/Button';\nimport { required, email, password, alphaNumeric } from '../UIComponents/validate';\nvar TEST_SITE_KEY = '6LfY2X8UAAAAAMY7vxlO5ZmKTDHa91HDWsIoHsh8';\n\nvar SignupForm =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(SignupForm, _PureComponent);\n\n  function SignupForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SignupForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SignupForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this._reCaptchaRef = React.createRef();\n    _this.state = {\n      disabled: true\n    };\n\n    _this.onChange = function (value) {\n      if (value) {\n        _this.setState({\n          disabled: false\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(SignupForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          loading = _this$props.loading;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"alt-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"alt-form-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Signup to get started\"), React.createElement(\"img\", {\n        src: logo,\n        title: \"alterhop\",\n        alt: \"alterhop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"alt-two-form-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"firstname\",\n        type: \"text\",\n        component: AltField,\n        label: \"firstname\",\n        validate: [required, alphaNumeric],\n        placeholder: \"Enter your firstname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"lastname\",\n        type: \"text\",\n        component: AltField,\n        label: \"lastname\",\n        validate: [required, alphaNumeric],\n        placeholder: \"Enter your lastname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), this.props.proftype === 'student' && React.createElement(Field, {\n        name: \"email\",\n        type: \"email\",\n        component: AltField,\n        label: \"email\",\n        validate: [required, email],\n        placeholder: \"Enter your email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), this.props.proftype === 'company' && React.createElement(Field, {\n        name: \"email\",\n        type: \"email\",\n        component: AltField,\n        label: \"Company Email\",\n        validate: [required, email],\n        placeholder: \"Enter your Company Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"username\",\n        type: \"username\",\n        component: AltField,\n        label: \"username\",\n        validate: [required, alphaNumeric],\n        placeholder: \"Enter your username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(Field, {\n        component: AltField,\n        label: \"password\",\n        name: \"password\",\n        placeholder: \"Enter your password\",\n        type: \"password\",\n        validate: [required, password],\n        id: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(FormGroup, {\n        className: \"alt-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(ReCAPTCHA, {\n        style: {\n          display: 'inline-block'\n        },\n        theme: \"light\",\n        ref: this._reCaptchaRef,\n        sitekey: TEST_SITE_KEY,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"alt-form-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(AltButton, {\n        disabled: loading || this.state.disabled,\n        loading: loading,\n        type: \"submit\",\n        text: \"submit\",\n        large: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"alt-form-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"or else login to continue ...\"), React.createElement(Link, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(AltButton, {\n        rightIcon: \"arrow-right\",\n        intent: \"success\",\n        text: \"login\",\n        large: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return SignupForm;\n}(PureComponent);\n\nvar func = PropTypes.func,\n    bool = PropTypes.bool,\n    string = PropTypes.string;\nSignupForm.propTypes = {\n  loading: bool,\n  handleSubmit: func.isRequired,\n  proftype: string\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    err: state.loginReducer.err\n  };\n};\n\nSignupForm = reduxForm({\n  form: 'signupForm'\n})(SignupForm);\nexport default withRouter(connect(mapStateToProps)(SignupForm));","map":{"version":3,"sources":["/home/yellowwoods/Documents/alterhop/frontend/src/components/SignupForm/index.js"],"names":["React","PureComponent","PropTypes","ReCAPTCHA","Link","withRouter","connect","Field","reduxForm","Divider","FormGroup","logo","AltField","AltButton","required","email","password","alphaNumeric","TEST_SITE_KEY","SignupForm","_reCaptchaRef","createRef","state","disabled","onChange","value","setState","props","handleSubmit","loading","proftype","display","func","bool","string","propTypes","isRequired","mapStateToProps","err","loginReducer","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,mBAAnC;AAEA,OAAOC,IAAP,MAAiB,6CAAjB;AACA,SAASC,QAAT,QAAyB,4BAAzB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,QAA1B,EAAoCC,YAApC,QAAwD,0BAAxD;AACA,IAAMC,aAAa,GAAG,0CAAtB;;IAEMC,U;;;;;;;;;;;;;;;;;UACLC,a,GAAgBpB,KAAK,CAACqB,SAAN,E;UAEhBC,K,GAAQ;AACPC,MAAAA,QAAQ,EAAE;AADH,K;;UAIRC,Q,GAAW,UAACC,KAAD,EAAW;AACrB,UAAIA,KAAJ,EAAW;AACV,cAAKC,QAAL,CAAc;AACbH,UAAAA,QAAQ,EAAE;AADG,SAAd;AAGA;AACD,K;;;;;;;6BACQ;AAAA,wBAC0B,KAAKI,KAD/B;AAAA,UACAC,YADA,eACAA,YADA;AAAA,UACcC,OADd,eACcA,OADd;AAER,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAM,QAAA,QAAQ,EAAED,YAAhB;AAA8B,QAAA,SAAS,EAAC,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADD,EAEC;AAAK,QAAA,GAAG,EAAEjB,IAAV;AAAgB,QAAA,KAAK,EAAC,UAAtB;AAAiC,QAAA,GAAG,EAAC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,CADD,EAKC;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,KAAD;AACC,QAAA,IAAI,EAAC,WADN;AAEC,QAAA,IAAI,EAAC,MAFN;AAGC,QAAA,SAAS,EAAEC,QAHZ;AAIC,QAAA,KAAK,EAAC,WAJP;AAKC,QAAA,QAAQ,EAAE,CAACE,QAAD,EAAWG,YAAX,CALX;AAMC,QAAA,WAAW,EAAC,sBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EASC,oBAAC,KAAD;AACC,QAAA,IAAI,EAAC,UADN;AAEC,QAAA,IAAI,EAAC,MAFN;AAGC,QAAA,SAAS,EAAEL,QAHZ;AAIC,QAAA,KAAK,EAAC,UAJP;AAKC,QAAA,QAAQ,EAAE,CAACE,QAAD,EAAWG,YAAX,CALX;AAMC,QAAA,WAAW,EAAC,qBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATD,CALD,EAuBE,KAAKU,KAAL,CAAWG,QAAX,KAAwB,SAAxB,IACA,oBAAC,KAAD;AACC,QAAA,IAAI,EAAC,OADN;AAEC,QAAA,IAAI,EAAC,OAFN;AAGC,QAAA,SAAS,EAAElB,QAHZ;AAIC,QAAA,KAAK,EAAC,OAJP;AAKC,QAAA,QAAQ,EAAE,CAACE,QAAD,EAAWC,KAAX,CALX;AAMC,QAAA,WAAW,EAAC,kBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxBF,EAiCE,KAAKY,KAAL,CAAWG,QAAX,KAAwB,SAAxB,IACA,oBAAC,KAAD;AACC,QAAA,IAAI,EAAC,OADN;AAEC,QAAA,IAAI,EAAC,OAFN;AAGC,QAAA,SAAS,EAAElB,QAHZ;AAIC,QAAA,KAAK,EAAC,eAJP;AAKC,QAAA,QAAQ,EAAE,CAACE,QAAD,EAAWC,KAAX,CALX;AAMC,QAAA,WAAW,EAAC,0BANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlCF,EA2CC,oBAAC,KAAD;AACC,QAAA,IAAI,EAAC,UADN;AAEC,QAAA,IAAI,EAAC,UAFN;AAGC,QAAA,SAAS,EAAEH,QAHZ;AAIC,QAAA,KAAK,EAAC,UAJP;AAKC,QAAA,QAAQ,EAAE,CAACE,QAAD,EAAWG,YAAX,CALX;AAMC,QAAA,WAAW,EAAC,qBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3CD,EAmDC,oBAAC,KAAD;AACC,QAAA,SAAS,EAAEL,QADZ;AAEC,QAAA,KAAK,EAAC,UAFP;AAGC,QAAA,IAAI,EAAC,UAHN;AAIC,QAAA,WAAW,EAAC,qBAJb;AAKC,QAAA,IAAI,EAAC,UALN;AAMC,QAAA,QAAQ,EAAE,CAACE,QAAD,EAAWE,QAAX,CANX;AAOC,QAAA,EAAE,EAAC,UAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnDD,EA4DC,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,SAAD;AACC,QAAA,KAAK,EAAE;AAAEe,UAAAA,OAAO,EAAE;AAAX,SADR;AAEC,QAAA,KAAK,EAAC,OAFP;AAGC,QAAA,GAAG,EAAE,KAAKX,aAHX;AAIC,QAAA,OAAO,EAAEF,aAJV;AAKC,QAAA,QAAQ,EAAE,KAAKM,QALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CA5DD,EAqEC;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,SAAD;AACC,QAAA,QAAQ,EAAEK,OAAO,IAAI,KAAKP,KAAL,CAAWC,QADjC;AAEC,QAAA,OAAO,EAAEM,OAFV;AAGC,QAAA,IAAI,EAAC,QAHN;AAIC,QAAA,IAAI,EAAC,QAJN;AAKC,QAAA,KAAK,EAAE,IALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CArED,EA8EC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFD,EAGC,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,aAArB;AAAmC,QAAA,MAAM,EAAC,SAA1C;AAAoD,QAAA,IAAI,EAAC,OAAzD;AAAiE,QAAA,KAAK,EAAE,IAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAHD,CA9ED,CADD,CADD;AA0FA;;;;EA1GuB5B,a;;IA6GjB+B,I,GAAuB9B,S,CAAvB8B,I;IAAMC,I,GAAiB/B,S,CAAjB+B,I;IAAMC,M,GAAWhC,S,CAAXgC,M;AAEpBf,UAAU,CAACgB,SAAX,GAAuB;AACtBN,EAAAA,OAAO,EAAEI,IADa;AAEtBL,EAAAA,YAAY,EAAEI,IAAI,CAACI,UAFG;AAGtBN,EAAAA,QAAQ,EAAEI;AAHY,CAAvB;;AAMA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACf,KAAD;AAAA,SAAY;AACnCgB,IAAAA,GAAG,EAAEhB,KAAK,CAACiB,YAAN,CAAmBD;AADW,GAAZ;AAAA,CAAxB;;AAIAnB,UAAU,GAAGX,SAAS,CAAC;AACtBgC,EAAAA,IAAI,EAAE;AADgB,CAAD,CAAT,CAEVrB,UAFU,CAAb;AAIA,eAAed,UAAU,CAACC,OAAO,CAAC+B,eAAD,CAAP,CAAyBlB,UAAzB,CAAD,CAAzB","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport ReCAPTCHA from 'react-google-recaptcha'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\nimport { Divider, FormGroup } from '@blueprintjs/core'\n\nimport logo from '../StaticHomepage/images/AlterhopLogo-2.png'\nimport { AltField } from '../UIComponents/InputTypes'\nimport { AltButton } from '../UIComponents/Button'\nimport { required, email, password, alphaNumeric } from '../UIComponents/validate'\nconst TEST_SITE_KEY = '6LfY2X8UAAAAAMY7vxlO5ZmKTDHa91HDWsIoHsh8'\n\nclass SignupForm extends PureComponent {\n\t_reCaptchaRef = React.createRef()\n\n\tstate = {\n\t\tdisabled: true\n\t}\n\n\tonChange = (value) => {\n\t\tif (value) {\n\t\t\tthis.setState({\n\t\t\t\tdisabled: false\n\t\t\t})\n\t\t}\n\t}\n\trender() {\n\t\tconst { handleSubmit, loading } = this.props\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<form onSubmit={handleSubmit} className=\"alt-form\">\n\t\t\t\t\t<div className=\"alt-form-title\">\n\t\t\t\t\t\t<h3>Signup to get started</h3>\n\t\t\t\t\t\t<img src={logo} title=\"alterhop\" alt=\"alterhop\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"alt-two-form-field\">\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tname=\"firstname\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tcomponent={AltField}\n\t\t\t\t\t\t\tlabel=\"firstname\"\n\t\t\t\t\t\t\tvalidate={[required, alphaNumeric]}\n\t\t\t\t\t\t\tplaceholder=\"Enter your firstname\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tname=\"lastname\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tcomponent={AltField}\n\t\t\t\t\t\t\tlabel=\"lastname\"\n\t\t\t\t\t\t\tvalidate={[required, alphaNumeric]}\n\t\t\t\t\t\t\tplaceholder=\"Enter your lastname\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t{this.props.proftype === 'student' && (\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tcomponent={AltField}\n\t\t\t\t\t\t\tlabel=\"email\"\n\t\t\t\t\t\t\tvalidate={[required, email]}\n\t\t\t\t\t\t\tplaceholder=\"Enter your email\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.props.proftype === 'company' && (\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tcomponent={AltField}\n\t\t\t\t\t\t\tlabel=\"Company Email\"\n\t\t\t\t\t\t\tvalidate={[required, email]}\n\t\t\t\t\t\t\tplaceholder=\"Enter your Company Email\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<Field\n\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\ttype=\"username\"\n\t\t\t\t\t\tcomponent={AltField}\n\t\t\t\t\t\tlabel=\"username\"\n\t\t\t\t\t\tvalidate={[required, alphaNumeric]}\n\t\t\t\t\t\tplaceholder=\"Enter your username\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tcomponent={AltField}\n\t\t\t\t\t\tlabel=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalidate={[required, password]}\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FormGroup className=\"alt-input\">\n\t\t\t\t\t\t<ReCAPTCHA\n\t\t\t\t\t\t\tstyle={{ display: 'inline-block' }}\n\t\t\t\t\t\t\ttheme=\"light\"\n\t\t\t\t\t\t\tref={this._reCaptchaRef}\n\t\t\t\t\t\t\tsitekey={TEST_SITE_KEY}\n\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t\t<div className=\"alt-form-btn\">\n\t\t\t\t\t\t<AltButton\n\t\t\t\t\t\t\tdisabled={loading || this.state.disabled}\n\t\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\ttext=\"submit\"\n\t\t\t\t\t\t\tlarge={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"alt-form-divider\">\n\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t<p>or else login to continue ...</p>\n\t\t\t\t\t\t<Link to=\"/login\">\n\t\t\t\t\t\t\t<AltButton rightIcon=\"arrow-right\" intent=\"success\" text=\"login\" large={true} />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst { func, bool, string } = PropTypes\n\nSignupForm.propTypes = {\n\tloading: bool,\n\thandleSubmit: func.isRequired,\n\tproftype: string\n}\n\nconst mapStateToProps = (state) => ({\n\terr: state.loginReducer.err\n})\n\nSignupForm = reduxForm({\n\tform: 'signupForm'\n})(SignupForm)\n\nexport default withRouter(connect(mapStateToProps)(SignupForm))\n"]},"metadata":{},"sourceType":"module"}