{"ast":null,"code":"import { FETCH_USERS, UPDATE_USERS, USERS_ERROR, USERS_CLEAR_ERR } from './types';\nimport axios from 'axios';\n\nvar fetchUsers = function fetchUsers(payload) {\n  return {\n    type: FETCH_USERS,\n    payload: payload\n  };\n};\n\nvar updateUsers = function updateUsers(payload) {\n  return {\n    type: UPDATE_USERS,\n    payload: payload\n  };\n};\n\nvar usersError = function usersError(payload) {\n  return {\n    type: USERS_ERROR,\n    payload: payload\n  };\n};\n\nexport var userClearErr = function userClearErr() {\n  return {\n    type: USERS_CLEAR_ERR\n  };\n};\nexport var fetchUser = function fetchUser() {\n  return function (dispatch) {\n    var token = localStorage.getItem('token');\n    var headers = {\n      'Content-Type': 'application/json',\n      authorization: token\n    };\n    return axios.get('https://api.alterhop.com/api/v1/user', {\n      headers: headers\n    }).then(function (res) {\n      // if(res.status === 304 || res.data.message)\n      dispatch(fetchUsers(res.data));\n    });\n  };\n};\nexport var updateUser = function updateUser(values) {\n  return function (dispatch) {\n    var token = localStorage.getItem('token');\n    var headers = {\n      'Content-Type': 'application/json',\n      authorization: token\n    };\n    return axios.post('https://api.alterhop.com/api/v1/user/update', values, {\n      headers: headers\n    }).then(function (res) {\n      if (res.status === 201) {\n        dispatch(updateUsers(res.data));\n      } else {\n        dispatch(usersError({\n          err: res.data.message\n        }));\n      }\n    }).catch(function (err) {\n      var re = /40\\d/;\n\n      if (re.test(err.response.status)) {// dispatch(usersError({ err: err.response.data.message }))\n      } else {\n        dispatch(usersError({\n          err: err.message\n        }));\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/yellowwoods/Documents/alterhop/frontend/src/containers/Home/action.js"],"names":["FETCH_USERS","UPDATE_USERS","USERS_ERROR","USERS_CLEAR_ERR","axios","fetchUsers","payload","type","updateUsers","usersError","userClearErr","fetchUser","dispatch","token","localStorage","getItem","headers","authorization","get","then","res","data","updateUser","values","post","status","err","message","catch","re","test","response"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,YAAtB,EAAoCC,WAApC,EAAiDC,eAAjD,QAAwE,SAAxE;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD;AAAA,SAAc;AAChCC,IAAAA,IAAI,EAAEP,WAD0B;AAEhCM,IAAAA,OAAO,EAAPA;AAFgC,GAAd;AAAA,CAAnB;;AAKA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACF,OAAD;AAAA,SAAc;AACjCC,IAAAA,IAAI,EAAEN,YAD2B;AAEjCK,IAAAA,OAAO,EAAPA;AAFiC,GAAd;AAAA,CAApB;;AAKA,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACH,OAAD;AAAA,SAAc;AAChCC,IAAAA,IAAI,EAAEL,WAD0B;AAEhCI,IAAAA,OAAO,EAAPA;AAFgC,GAAd;AAAA,CAAnB;;AAKA,OAAO,IAAMI,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAO;AAClCH,IAAAA,IAAI,EAAEJ;AAD4B,GAAP;AAAA,CAArB;AAIP,OAAO,IAAMQ,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAM,UAACC,QAAD,EAAc;AAC5C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAMC,OAAO,GAAG;AACf,sBAAgB,kBADD;AAEfC,MAAAA,aAAa,EAAEJ;AAFA,KAAhB;AAIA,WAAOT,KAAK,CAACc,GAAN,CAAU,sCAAV,EAAkD;AAAEF,MAAAA,OAAO,EAAPA;AAAF,KAAlD,EAA+DG,IAA/D,CAAoE,UAACC,GAAD,EAAS;AACnF;AACAR,MAAAA,QAAQ,CAACP,UAAU,CAACe,GAAG,CAACC,IAAL,CAAX,CAAR;AACA,KAHM,CAAP;AAIA,GAVwB;AAAA,CAAlB;AAYP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD;AAAA,SAAY,UAACX,QAAD,EAAc;AACnD,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAMC,OAAO,GAAG;AACf,sBAAgB,kBADD;AAEfC,MAAAA,aAAa,EAAEJ;AAFA,KAAhB;AAIA,WAAOT,KAAK,CACVoB,IADK,CACA,6CADA,EAC+CD,MAD/C,EACuD;AAAEP,MAAAA,OAAO,EAAPA;AAAF,KADvD,EAELG,IAFK,CAEA,UAACC,GAAD,EAAS;AACd,UAAIA,GAAG,CAACK,MAAJ,KAAe,GAAnB,EAAwB;AACvBb,QAAAA,QAAQ,CAACJ,WAAW,CAACY,GAAG,CAACC,IAAL,CAAZ,CAAR;AACA,OAFD,MAEO;AACNT,QAAAA,QAAQ,CAACH,UAAU,CAAC;AAAEiB,UAAAA,GAAG,EAAEN,GAAG,CAACC,IAAJ,CAASM;AAAhB,SAAD,CAAX,CAAR;AACA;AACD,KARK,EASLC,KATK,CASC,UAACF,GAAD,EAAS;AACf,UAAMG,EAAE,GAAG,MAAX;;AACA,UAAIA,EAAE,CAACC,IAAH,CAAQJ,GAAG,CAACK,QAAJ,CAAaN,MAArB,CAAJ,EAAkC,CACjC;AACA,OAFD,MAEO;AACNb,QAAAA,QAAQ,CAACH,UAAU,CAAC;AAAEiB,UAAAA,GAAG,EAAEA,GAAG,CAACC;AAAX,SAAD,CAAX,CAAR;AACA;AACD,KAhBK,CAAP;AAiBA,GAvByB;AAAA,CAAnB","sourcesContent":["import { FETCH_USERS, UPDATE_USERS, USERS_ERROR, USERS_CLEAR_ERR } from './types'\nimport axios from 'axios'\n\nconst fetchUsers = (payload) => ({\n\ttype: FETCH_USERS,\n\tpayload\n})\n\nconst updateUsers = (payload) => ({\n\ttype: UPDATE_USERS,\n\tpayload\n})\n\nconst usersError = (payload) => ({\n\ttype: USERS_ERROR,\n\tpayload\n})\n\nexport const userClearErr = () => ({\n\ttype: USERS_CLEAR_ERR\n})\n\nexport const fetchUser = () => (dispatch) => {\n\tconst token = localStorage.getItem('token')\n\tconst headers = {\n\t\t'Content-Type': 'application/json',\n\t\tauthorization: token\n\t}\n\treturn axios.get('https://api.alterhop.com/api/v1/user', { headers }).then((res) => {\n\t\t// if(res.status === 304 || res.data.message)\n\t\tdispatch(fetchUsers(res.data))\n\t})\n}\n\nexport const updateUser = (values) => (dispatch) => {\n\tconst token = localStorage.getItem('token')\n\tconst headers = {\n\t\t'Content-Type': 'application/json',\n\t\tauthorization: token\n\t}\n\treturn axios\n\t\t.post('https://api.alterhop.com/api/v1/user/update', values, { headers })\n\t\t.then((res) => {\n\t\t\tif (res.status === 201) {\n\t\t\t\tdispatch(updateUsers(res.data))\n\t\t\t} else {\n\t\t\t\tdispatch(usersError({ err: res.data.message }))\n\t\t\t}\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconst re = /40\\d/\n\t\t\tif (re.test(err.response.status)) {\n\t\t\t\t// dispatch(usersError({ err: err.response.data.message }))\n\t\t\t} else {\n\t\t\t\tdispatch(usersError({ err: err.message }))\n\t\t\t}\n\t\t})\n}\n"]},"metadata":{},"sourceType":"module"}