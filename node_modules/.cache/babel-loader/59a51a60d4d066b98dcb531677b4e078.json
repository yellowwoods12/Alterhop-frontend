{"ast":null,"code":"var _jsxFileName = \"/home/yellowwoods/Documents/alterhop/frontend/src/components/LoginForm/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Divider } from '@blueprintjs/core';\nimport logo from '../StaticHomepage/images/AlterhopLogo-2.png';\nimport { AltField } from '../UIComponents/InputTypes';\nimport { AltButton } from '../UIComponents/Button';\nimport { required, email, password } from '../UIComponents/validate';\n\nvar LoginForm = function LoginForm(props) {\n  var handleSubmit = props.handleSubmit,\n      loading = props.loading,\n      signupto = props.signupto;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"alt-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"alt-form-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Login to get started\"), React.createElement(\"img\", {\n    src: logo,\n    title: \"alterhop\",\n    alt: \"alterhop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    component: AltField,\n    label: \"email\",\n    validate: [required, email],\n    placeholder: \"Enter your email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: AltField,\n    label: \"password\",\n    name: \"password\",\n    placeholder: \"Enter your password\",\n    type: \"password\",\n    validate: [required, password],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    className: \"alt-small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/forgot/password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"forgot your password\")), React.createElement(\"div\", {\n    className: \"alt-form-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(AltButton, {\n    loading: loading,\n    disabled: loading,\n    type: \"submit\",\n    text: \"submit\",\n    large: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"alt-form-divider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"or else signup to continue ...\"), React.createElement(Link, {\n    to: signupto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(AltButton, {\n    rightIcon: \"arrow-right\",\n    intent: \"success\",\n    text: \"signup\",\n    large: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })))));\n};\n\nvar func = PropTypes.func,\n    bool = PropTypes.bool,\n    string = PropTypes.string;\nLoginForm.propTypes = {\n  loading: bool,\n  handleSubmit: func.isRequired,\n  signupto: string\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    err: state.loginReducer.err\n  };\n};\n\nLoginForm = reduxForm({\n  form: 'loginForm'\n})(LoginForm);\nexport default withRouter(connect(mapStateToProps)(LoginForm));","map":{"version":3,"sources":["/home/yellowwoods/Documents/alterhop/frontend/src/components/LoginForm/index.js"],"names":["React","PropTypes","Link","withRouter","connect","Field","reduxForm","Divider","logo","AltField","AltButton","required","email","password","LoginForm","props","handleSubmit","loading","signupto","func","bool","string","propTypes","isRequired","mapStateToProps","state","err","loginReducer","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,OAAOC,IAAP,MAAiB,6CAAjB;AACA,SAASC,QAAT,QAAyB,4BAAzB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,QAA1B,QAA0C,0BAA1C;;AAEA,IAAIC,SAAS,GAAG,mBAACC,KAAD,EAAW;AAAA,MAClBC,YADkB,GACkBD,KADlB,CAClBC,YADkB;AAAA,MACJC,OADI,GACkBF,KADlB,CACJE,OADI;AAAA,MACKC,QADL,GACkBH,KADlB,CACKG,QADL;AAE1B,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AAA8B,IAAA,SAAS,EAAC,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADD,EAEC;AAAK,IAAA,GAAG,EAAER,IAAV;AAAgB,IAAA,KAAK,EAAC,UAAtB;AAAiC,IAAA,GAAG,EAAC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD,EAKC,oBAAC,KAAD;AACC,IAAA,IAAI,EAAC,OADN;AAEC,IAAA,IAAI,EAAC,OAFN;AAGC,IAAA,SAAS,EAAEC,QAHZ;AAIC,IAAA,KAAK,EAAC,OAJP;AAKC,IAAA,QAAQ,EAAE,CAACE,QAAD,EAAWC,KAAX,CALX;AAMC,IAAA,WAAW,EAAC,kBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,EAaC,oBAAC,KAAD;AACC,IAAA,SAAS,EAAEH,QADZ;AAEC,IAAA,KAAK,EAAC,UAFP;AAGC,IAAA,IAAI,EAAC,UAHN;AAIC,IAAA,WAAW,EAAC,qBAJb;AAKC,IAAA,IAAI,EAAC,UALN;AAMC,IAAA,QAAQ,EAAE,CAACE,QAAD,EAAWE,QAAX,CANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbD,EAqBC;AAAO,IAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADD,CArBD,EAwBC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEI,OAApB;AAA6B,IAAA,QAAQ,EAAEA,OAAvC;AAAgD,IAAA,IAAI,EAAC,QAArD;AAA8D,IAAA,IAAI,EAAC,QAAnE;AAA4E,IAAA,KAAK,EAAE,IAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAxBD,EA2BC;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFD,EAGC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,aAArB;AAAmC,IAAA,MAAM,EAAC,SAA1C;AAAoD,IAAA,IAAI,EAAC,QAAzD;AAAkE,IAAA,KAAK,EAAE,IAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAHD,CA3BD,CADD,CADD;AAuCA,CAzCD;;IA2CQC,I,GAAuBlB,S,CAAvBkB,I;IAAMC,I,GAAiBnB,S,CAAjBmB,I;IAAMC,M,GAAWpB,S,CAAXoB,M;AAEpBP,SAAS,CAACQ,SAAV,GAAsB;AACrBL,EAAAA,OAAO,EAAEG,IADY;AAErBJ,EAAAA,YAAY,EAAEG,IAAI,CAACI,UAFE;AAGrBL,EAAAA,QAAQ,EAAEG;AAHW,CAAtB;;AAMA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AACnCC,IAAAA,GAAG,EAAED,KAAK,CAACE,YAAN,CAAmBD;AADW,GAAZ;AAAA,CAAxB;;AAIAZ,SAAS,GAAGR,SAAS,CAAC;AACrBsB,EAAAA,IAAI,EAAE;AADe,CAAD,CAAT,CAETd,SAFS,CAAZ;AAIA,eAAeX,UAAU,CAACC,OAAO,CAACoB,eAAD,CAAP,CAAyBV,SAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\nimport { Divider } from '@blueprintjs/core'\n\nimport logo from '../StaticHomepage/images/AlterhopLogo-2.png'\nimport { AltField } from '../UIComponents/InputTypes'\nimport { AltButton } from '../UIComponents/Button'\nimport { required, email, password } from '../UIComponents/validate'\n\nlet LoginForm = (props) => {\n\tconst { handleSubmit, loading, signupto } = props\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={handleSubmit} className=\"alt-form\">\n\t\t\t\t<div className=\"alt-form-title\">\n\t\t\t\t\t<h3>Login to get started</h3>\n\t\t\t\t\t<img src={logo} title=\"alterhop\" alt=\"alterhop\" />\n\t\t\t\t</div>\n\t\t\t\t<Field\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tcomponent={AltField}\n\t\t\t\t\tlabel=\"email\"\n\t\t\t\t\tvalidate={[required, email]}\n\t\t\t\t\tplaceholder=\"Enter your email\"\n\t\t\t\t/>\n\t\t\t\t<Field\n\t\t\t\t\tcomponent={AltField}\n\t\t\t\t\tlabel=\"password\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tvalidate={[required, password]}\n\t\t\t\t/>\n\t\t\t\t<small className=\"alt-small\">\n\t\t\t\t\t<Link to=\"/forgot/password\">forgot your password</Link>\n\t\t\t\t</small>\n\t\t\t\t<div className=\"alt-form-btn\">\n\t\t\t\t\t<AltButton loading={loading} disabled={loading} type=\"submit\" text=\"submit\" large={true} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"alt-form-divider\">\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<p>or else signup to continue ...</p>\n\t\t\t\t\t<Link to={signupto}>\n\t\t\t\t\t\t<AltButton rightIcon=\"arrow-right\" intent=\"success\" text=\"signup\" large={true} />\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nconst { func, bool, string } = PropTypes\n\nLoginForm.propTypes = {\n\tloading: bool,\n\thandleSubmit: func.isRequired,\n\tsignupto: string\n}\n\nconst mapStateToProps = (state) => ({\n\terr: state.loginReducer.err\n})\n\nLoginForm = reduxForm({\n\tform: 'loginForm'\n})(LoginForm)\n\nexport default withRouter(connect(mapStateToProps)(LoginForm))\n"]},"metadata":{},"sourceType":"module"}