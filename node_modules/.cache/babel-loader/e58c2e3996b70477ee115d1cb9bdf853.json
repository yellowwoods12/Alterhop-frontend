{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport localforage from 'localforage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport { reducer as formReducer } from 'redux-form';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger'; // all reducers here\n\nimport loginReducer from './containers/Login/reducer';\nimport signupReducer from './containers/Signup/reducer';\nimport userReducer from './containers/Home/reducer';\nimport companyUserReducer from './containers/Company/Personal/reducer';\nimport organizationReducer from './containers/Company/Organization/reducer';\nimport jobsReducer from './containers/Company/Jobs/reducer';\nvar rootReducer = combineReducers({\n  form: formReducer,\n  loginReducer: loginReducer,\n  signupReducer: signupReducer,\n  userReducer: userReducer,\n  companyUserReducer: companyUserReducer,\n  organizationReducer: organizationReducer,\n  jobsReducer: jobsReducer\n});\nvar persistConfig = {\n  key: 'alterhop@123',\n  storage: localforage,\n  blacklist: ['form'],\n  stateReconciler: autoMergeLevel2\n};\nvar persistedReducer = persistReducer(persistConfig, rootReducer);\n\nvar store = function store() {\n  var store = createStore(persistedReducer, applyMiddleware(thunk, logger));\n  var persistor = persistStore(store);\n  return {\n    store: store,\n    persistor: persistor\n  };\n};\n\nexport default store();","map":{"version":3,"sources":["/home/yellowwoods/Documents/alterhop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","persistStore","persistReducer","localforage","autoMergeLevel2","reducer","formReducer","thunk","logger","loginReducer","signupReducer","userReducer","companyUserReducer","organizationReducer","jobsReducer","rootReducer","form","persistConfig","key","storage","blacklist","stateReconciler","persistedReducer","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,YAAvC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,kBAAP,MAA+B,uCAA/B;AACA,OAAOC,mBAAP,MAAgC,2CAAhC;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AAEA,IAAMC,WAAW,GAAGhB,eAAe,CAAC;AACnCiB,EAAAA,IAAI,EAAEV,WAD6B;AAEnCG,EAAAA,YAAY,EAAZA,YAFmC;AAGnCC,EAAAA,aAAa,EAAbA,aAHmC;AAInCC,EAAAA,WAAW,EAAXA,WAJmC;AAKnCC,EAAAA,kBAAkB,EAAlBA,kBALmC;AAMnCC,EAAAA,mBAAmB,EAAnBA,mBANmC;AAOnCC,EAAAA,WAAW,EAAXA;AAPmC,CAAD,CAAnC;AAUA,IAAMG,aAAa,GAAG;AACrBC,EAAAA,GAAG,EAAE,cADgB;AAErBC,EAAAA,OAAO,EAAEhB,WAFY;AAGrBiB,EAAAA,SAAS,EAAE,CAAC,MAAD,CAHU;AAIrBC,EAAAA,eAAe,EAAEjB;AAJI,CAAtB;AAMA,IAAMkB,gBAAgB,GAAGpB,cAAc,CAACe,aAAD,EAAgBF,WAAhB,CAAvC;;AAEA,IAAMQ,KAAK,GAAG,iBAAM;AACnB,MAAIA,KAAK,GAAGzB,WAAW,CAACwB,gBAAD,EAAmBtB,eAAe,CAACO,KAAD,EAAQC,MAAR,CAAlC,CAAvB;AACA,MAAIgB,SAAS,GAAGvB,YAAY,CAACsB,KAAD,CAA5B;AACA,SAAO;AAAEA,IAAAA,KAAK,EAALA,KAAF;AAASC,IAAAA,SAAS,EAATA;AAAT,GAAP;AACA,CAJD;;AAMA,eAAeD,KAAK,EAApB","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport localforage from 'localforage'\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2'\nimport { reducer as formReducer } from 'redux-form'\nimport thunk from 'redux-thunk'\nimport logger from 'redux-logger'\n\n// all reducers here\nimport loginReducer from './containers/Login/reducer'\nimport signupReducer from './containers/Signup/reducer'\nimport userReducer from './containers/Home/reducer'\nimport companyUserReducer from './containers/Company/Personal/reducer'\nimport organizationReducer from './containers/Company/Organization/reducer'\nimport jobsReducer from './containers/Company/Jobs/reducer'\n\nconst rootReducer = combineReducers({\n\tform: formReducer,\n\tloginReducer,\n\tsignupReducer,\n\tuserReducer,\n\tcompanyUserReducer,\n\torganizationReducer,\n\tjobsReducer\n})\n\nconst persistConfig = {\n\tkey: 'alterhop@123',\n\tstorage: localforage,\n\tblacklist: ['form'],\n\tstateReconciler: autoMergeLevel2\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = () => {\n\tlet store = createStore(persistedReducer, applyMiddleware(thunk, logger))\n\tlet persistor = persistStore(store)\n\treturn { store, persistor }\n}\n\nexport default store()\n"]},"metadata":{},"sourceType":"module"}