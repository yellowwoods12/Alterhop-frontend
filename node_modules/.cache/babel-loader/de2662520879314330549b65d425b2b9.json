{"ast":null,"code":"import axios from 'axios';\nimport { ORG, ORG_ERROR, CLEAR_ORG_ERROR, FETCH_ORG } from './types';\nexport var org = function org(payload) {\n  return {\n    type: ORG,\n    payload: payload\n  };\n};\nexport var orgError = function orgError(payload) {\n  return {\n    type: ORG_ERROR,\n    payload: payload\n  };\n};\nexport var clearOrgError = function clearOrgError() {\n  return {\n    type: CLEAR_ORG_ERROR\n  };\n};\nexport var fetchCompanyValue = function fetchCompanyValue(payload) {\n  return {\n    type: FETCH_ORG,\n    payload: payload\n  };\n};\nexport var postCompany = function postCompany(values, url) {\n  return function (dispatch) {\n    var token = localStorage.getItem('token');\n    var headers = {\n      'Content-Type': 'application/json',\n      authorization: token\n    };\n    return axios.post(url, values, {\n      headers: headers\n    }).then(function (res) {\n      if (res.status === 201) {\n        dispatch(org(res.data));\n      } else {\n        dispatch(orgError({\n          err: res.data.message\n        }));\n      }\n    }).catch(function (err) {\n      var re = /40\\d/;\n\n      if (re.test(err.response.status)) {\n        dispatch(orgError({\n          err: err.response.data.message\n        }));\n      } else {\n        dispatch(orgError({\n          err: err.message\n        }));\n      }\n    });\n  };\n};\nexport var fetchCompany = function fetchCompany() {\n  return function (dispatch) {\n    var token = localStorage.getItem('token');\n    var headers = {\n      'Content-Type': 'application/json',\n      authorization: token\n    };\n    return axios.get('https://api.alterhop.com/api/v1/company/profile', {\n      headers: headers\n    }).then(function (res) {\n      // if(res.status === 304 || res.data.message)\n      dispatch(fetchCompanyValue({\n        company: res.data\n      }));\n    }).catch(function (err) {\n      var re = /40\\d/;\n\n      if (re.test(err.response.status)) {\n        dispatch(orgError({\n          err: err.response.data.message\n        }));\n      } else {\n        dispatch(orgError({\n          err: err.message\n        }));\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/yellowwoods/Documents/alterhop/frontend/src/containers/Company/Organization/action.js"],"names":["axios","ORG","ORG_ERROR","CLEAR_ORG_ERROR","FETCH_ORG","org","payload","type","orgError","clearOrgError","fetchCompanyValue","postCompany","values","url","dispatch","token","localStorage","getItem","headers","authorization","post","then","res","status","data","err","message","catch","re","test","response","fetchCompany","get","company"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { ORG, ORG_ERROR, CLEAR_ORG_ERROR, FETCH_ORG } from './types'\n\nexport const org = (payload) => ({\n\ttype: ORG,\n\tpayload\n})\n\nexport const orgError = (payload) => ({\n\ttype: ORG_ERROR,\n\tpayload\n})\n\nexport const clearOrgError = () => ({\n\ttype: CLEAR_ORG_ERROR\n})\n\nexport const fetchCompanyValue = (payload) => ({\n\ttype: FETCH_ORG,\n\tpayload\n})\n\nexport const postCompany = (values, url) => (dispatch) => {\n\tconst token = localStorage.getItem('token')\n\tconst headers = {\n\t\t'Content-Type': 'application/json',\n\t\tauthorization: token\n\t}\n\treturn axios\n\t\t.post(url, values, { headers })\n\t\t.then((res) => {\n\t\t\tif (res.status === 201) {\n\t\t\t\tdispatch(org(res.data))\n\t\t\t} else {\n\t\t\t\tdispatch(orgError({ err: res.data.message }))\n\t\t\t}\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconst re = /40\\d/\n\t\t\tif (re.test(err.response.status)) {\n\t\t\t\tdispatch(orgError({ err: err.response.data.message }))\n\t\t\t} else {\n\t\t\t\tdispatch(orgError({ err: err.message }))\n\t\t\t}\n\t\t})\n}\n\nexport const fetchCompany = () => (dispatch) => {\n\tconst token = localStorage.getItem('token')\n\tconst headers = {\n\t\t'Content-Type': 'application/json',\n\t\tauthorization: token\n\t}\n\treturn axios\n\t\t.get('https://api.alterhop.com/api/v1/company/profile', { headers })\n\t\t.then((res) => {\n\t\t\t// if(res.status === 304 || res.data.message)\n\t\t\tdispatch(fetchCompanyValue({ company: res.data }))\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconst re = /40\\d/\n\t\t\tif (re.test(err.response.status)) {\n\t\t\t\tdispatch(orgError({ err: err.response.data.message }))\n\t\t\t} else {\n\t\t\t\tdispatch(orgError({ err: err.message }))\n\t\t\t}\n\t\t})\n}\n"]},"metadata":{},"sourceType":"module"}