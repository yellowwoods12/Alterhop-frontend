{"ast":null,"code":"var _jsxFileName = \"/home/yellowwoods/Documents/alterhop/frontend/src/components/UIComponents/InputTypes/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroup, InputGroup, Intent } from '@blueprintjs/core';\n\nvar AltField = function AltField(_ref) {\n  var _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$classes = _ref.classes,\n      classes = _ref$classes === void 0 ? '' : _ref$classes,\n      placeholder = _ref.placeholder,\n      label = _ref.label,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'text' : _ref$type,\n      input = _ref.input,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error,\n      warning = _ref$meta.warning;\n  return React.createElement(FormGroup, {\n    label: label,\n    labelFor: input.name,\n    className: \"alt-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(InputGroup, Object.assign({\n    disabled: disabled,\n    autoComplete: \"off\",\n    className: \"alt-input-group \".concat(classes)\n  }, input, {\n    intent: touched ? error ? Intent.DANGER : Intent.PRIMARY : Intent.PRIMARY,\n    placeholder: placeholder,\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), touched && (error && React.createElement(\"span\", {\n    className: \"alt-form-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, error) || warning && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, warning)));\n};\n\nvar bool = PropTypes.bool,\n    string = PropTypes.string,\n    object = PropTypes.object;\nAltField.propTypes = {\n  disabled: bool,\n  classes: string,\n  placeholder: string,\n  label: string,\n  type: string,\n  input: object.isRequired,\n  meta: object.isRequired\n};\nexport { AltField };","map":{"version":3,"sources":["/home/yellowwoods/Documents/alterhop/frontend/src/components/UIComponents/InputTypes/index.js"],"names":["React","PropTypes","FormGroup","InputGroup","Intent","AltField","disabled","classes","placeholder","label","type","input","meta","touched","error","warning","name","DANGER","PRIMARY","bool","string","object","propTypes","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,MAAhC,QAA8C,mBAA9C;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,2BAChBC,QADgB;AAAA,MAChBA,QADgB,8BACL,KADK;AAAA,0BAEhBC,OAFgB;AAAA,MAEhBA,OAFgB,6BAEN,EAFM;AAAA,MAGhBC,WAHgB,QAGhBA,WAHgB;AAAA,MAIhBC,KAJgB,QAIhBA,KAJgB;AAAA,uBAKhBC,IALgB;AAAA,MAKhBA,IALgB,0BAKT,MALS;AAAA,MAMhBC,KANgB,QAMhBA,KANgB;AAAA,uBAOhBC,IAPgB;AAAA,MAORC,OAPQ,aAORA,OAPQ;AAAA,MAOCC,KAPD,aAOCA,KAPD;AAAA,MAOQC,OAPR,aAOQA,OAPR;AAAA,SAShB,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEN,KAAlB;AAAyB,IAAA,QAAQ,EAAEE,KAAK,CAACK,IAAzC;AAA+C,IAAA,SAAS,EAAC,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,UAAD;AACC,IAAA,QAAQ,EAAEV,QADX;AAEC,IAAA,YAAY,EAAC,KAFd;AAGC,IAAA,SAAS,4BAAqBC,OAArB;AAHV,KAIKI,KAJL;AAKC,IAAA,MAAM,EAAEE,OAAO,GAAIC,KAAK,GAAGV,MAAM,CAACa,MAAV,GAAmBb,MAAM,CAACc,OAAnC,GAA8Cd,MAAM,CAACc,OALrE;AAMC,IAAA,WAAW,EAAEV,WANd;AAOC,IAAA,IAAI,EAAEE,IAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,EAUEG,OAAO,KAAMC,KAAK,IAAI;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCA,KAAlC,CAAV,IAA+DC,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,OAAP,CAA/E,CAVT,CATgB;AAAA,CAAjB;;IAuBQI,I,GAAyBlB,S,CAAzBkB,I;IAAMC,M,GAAmBnB,S,CAAnBmB,M;IAAQC,M,GAAWpB,S,CAAXoB,M;AAEtBhB,QAAQ,CAACiB,SAAT,GAAqB;AACpBhB,EAAAA,QAAQ,EAAEa,IADU;AAEpBZ,EAAAA,OAAO,EAAEa,MAFW;AAGpBZ,EAAAA,WAAW,EAAEY,MAHO;AAIpBX,EAAAA,KAAK,EAAEW,MAJa;AAKpBV,EAAAA,IAAI,EAAEU,MALc;AAMpBT,EAAAA,KAAK,EAAEU,MAAM,CAACE,UANM;AAOpBX,EAAAA,IAAI,EAAES,MAAM,CAACE;AAPO,CAArB;AAUA,SAASlB,QAAT","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FormGroup, InputGroup, Intent } from '@blueprintjs/core'\n\nconst AltField = ({\n\tdisabled = false,\n\tclasses = '',\n\tplaceholder,\n\tlabel,\n\ttype = 'text',\n\tinput,\n\tmeta: { touched, error, warning }\n}) => (\n\t<FormGroup label={label} labelFor={input.name} className=\"alt-input\">\n\t\t<InputGroup\n\t\t\tdisabled={disabled}\n\t\t\tautoComplete=\"off\"\n\t\t\tclassName={`alt-input-group ${classes}`}\n\t\t\t{...input}\n\t\t\tintent={touched ? (error ? Intent.DANGER : Intent.PRIMARY) : Intent.PRIMARY}\n\t\t\tplaceholder={placeholder}\n\t\t\ttype={type}\n\t\t/>\n\t\t{touched && ((error && <span className=\"alt-form-error\">{error}</span>) || (warning && <span>{warning}</span>))}\n\t</FormGroup>\n)\n\nconst { bool, string, object } = PropTypes\n\nAltField.propTypes = {\n\tdisabled: bool,\n\tclasses: string,\n\tplaceholder: string,\n\tlabel: string,\n\ttype: string,\n\tinput: object.isRequired,\n\tmeta: object.isRequired\n}\n\nexport { AltField }\n"]},"metadata":{},"sourceType":"module"}