"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.Provider = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _mantraCore = require("@storybook/mantra-core");

var _podda = _interopRequireDefault(require("@storybook/podda"));

var _context = _interopRequireDefault(require("./context"));

var _shortcuts = _interopRequireDefault(require("./modules/shortcuts"));

var _api = _interopRequireDefault(require("./modules/api"));

var _ui = _interopRequireDefault(require("./modules/ui"));

var _compose = require("./compose");

var Provider =
/*#__PURE__*/
function () {
  function Provider() {
    (0, _classCallCheck2.default)(this, Provider);
  }

  (0, _createClass2.default)(Provider, [{
    key: "renderPreview",
    value: function renderPreview() {
      throw new Error('Provider.renderPreview() is not implemented!');
    }
  }, {
    key: "handleAPI",
    value: function handleAPI() {
      throw new Error('Provider.handleAPI() is not implemented!');
    }
  }]);
  return Provider;
}();

exports.Provider = Provider;

function _default(domNode, provider) {
  if (!(provider instanceof Provider)) {
    throw new Error('provider is not extended from the base Provider');
  }

  var defaultState = (0, _objectSpread2.default)({}, _shortcuts.default.defaultState, _api.default.defaultState, _ui.default.defaultState);
  var clientStore = new _podda.default(defaultState);
  clientStore.registerAPI('toggle', function (store, key) {
    return store.set(key, !store.get(key));
  });
  var context = (0, _context.default)(clientStore, domNode, provider);
  var app = (0, _mantraCore.createApp)(context);
  app.loadModule(_shortcuts.default);
  app.loadModule(_api.default);
  app.loadModule(_ui.default);
  (0, _compose.setContext)(context);
  (0, _compose.setActions)(app._bindContext(app.actions)); // eslint-disable-line

  app.init();
}