"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.SearchBox = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _styled = _interopRequireDefault(require("@emotion/styled"));

var _reactLifecyclesCompat = require("react-lifecycles-compat");

var _reactModal = _interopRequireDefault(require("react-modal"));

var _reactFuzzy = _interopRequireDefault(require("react-fuzzy"));

var _core = require("@emotion/core");

var formatStories = function formatStories(stories) {
  var formattedStories = [];
  var i = 0;
  stories.forEach(function (val) {
    i += 1;
    formattedStories.push({
      type: 'kind',
      value: val.kind,
      id: i
    });
    val.stories.forEach(function (story) {
      i += 1;
      formattedStories.push({
        type: 'story',
        value: story,
        id: i,
        kind: val.kind
      });
    });
  });
  return formattedStories;
};

var SuggestionWrapper =
/*#__PURE__*/
(0, _styled.default)("div", {
  target: "e1h5sroh0"
})(function (_ref) {
  var selected = _ref.selected,
      selectedResultStyle = _ref.selectedResultStyle,
      resultsStyle = _ref.resultsStyle;
  return selected ? selectedResultStyle : resultsStyle;
}, {
  display: 'flex',
  justifyContent: 'space-between'
});
var SuggestionValue =
/*#__PURE__*/
(0, _styled.default)("p", {
  target: "e1h5sroh1"
})({
  margin: 0
});
var SuggestionKind =
/*#__PURE__*/
(0, _styled.default)("p", {
  target: "e1h5sroh2"
})({
  opacity: 0.5,
  margin: 0,
  paddingLeft: 10,
  textAlign: 'right'
});

var suggestionTemplate = function suggestionTemplate(props, state, styles, clickHandler) {
  return state.results.map(function (val, i) {
    return _react.default.createElement(SuggestionWrapper, (0, _extends2.default)({
      selected: state.selectedIndex === i
    }, styles, {
      tabIndex: 0,
      role: "option",
      "aria-selected": state.selectedIndex === i,
      key: "".concat(val.value, "_").concat(val.id),
      onClick: function onClick() {
        return clickHandler(i);
      }
    }), _react.default.createElement(SuggestionValue, null, val.value), _react.default.createElement(SuggestionKind, null, val.type === 'story' ? "in ".concat(val.kind) : 'Kind'));
  });
};

var SearchBox =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(SearchBox, _React$Component);

  function SearchBox() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, SearchBox);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SearchBox)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "onSelect", function (selected) {
      var onClose = _this.props.onClose;

      if (selected.type === 'story') {
        _this.fireOnStory(selected.value, selected.kind);
      } else {
        _this.fireOnKind(selected.value);
      }

      onClose();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "onModalOpen", function () {
      if (_this.inputRef.refs.searchBox !== null) {
        _this.inputRef.refs.searchBox.focus();
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "fireOnKind", function (kind) {
      var onSelectStory = _this.props.onSelectStory;

      if (onSelectStory) {
        onSelectStory(kind, null);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "fireOnStory", function (story, kind) {
      var onSelectStory = _this.props.onSelectStory;

      if (onSelectStory) {
        onSelectStory(kind, story);
      }
    });
    return _this;
  }

  (0, _createClass2.default)(SearchBox, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          showSearchBox = _this$props.showSearchBox,
          onClose = _this$props.onClose,
          stories = _this$props.stories,
          theme = _this$props.theme;
      return _react.default.createElement(_reactModal.default, {
        isOpen: showSearchBox,
        onAfterOpen: this.onModalOpen,
        onRequestClose: onClose,
        style: {
          overlay: {
            height: '100vh',
            width: '100vw',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            background: theme.overlayBackground,
            zIndex: 1
          },
          content: {
            fontSize: theme.mainTextColor,
            fontFamily: theme.mainTextFace,
            color: theme.mainTextColor
          }
        },
        className: "tmp" // This exists to make the Modal discard it's default styles for content
        ,
        contentLabel: "Search",
        shouldReturnFocusAfterClose: false
      }, _react.default.createElement(_reactFuzzy.default, {
        list: formatStories(stories),
        onSelect: this.onSelect,
        keys: ['value', 'type'],
        resultsTemplate: suggestionTemplate,
        ref: function ref(inputRef) {
          _this2.inputRef = inputRef;
        }
      }));
    }
  }]);
  return SearchBox;
}(_react.default.Component);

exports.SearchBox = SearchBox;
SearchBox.defaultProps = {
  stories: []
};
SearchBox.propTypes = {
  theme: _propTypes.default.shape({}).isRequired,
  showSearchBox: _propTypes.default.bool.isRequired,
  stories: _propTypes.default.arrayOf(_propTypes.default.object),
  onSelectStory: _propTypes.default.func.isRequired,
  onClose: _propTypes.default.func.isRequired
};
(0, _reactLifecyclesCompat.polyfill)(SearchBox);

var _default = (0, _core.withCSSContext)(function (props, _ref2) {
  var theme = _ref2.theme;
  return _react.default.createElement(SearchBox, (0, _extends2.default)({}, props, {
    theme: theme
  }));
});

exports.default = _default;