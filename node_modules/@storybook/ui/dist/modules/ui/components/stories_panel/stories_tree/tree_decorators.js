"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _reactTreebeard = require("react-treebeard");

var _components = require("@storybook/components");

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _routed_link = require("../../../containers/routed_link");

var _menu_item = _interopRequireDefault(require("../../menu_item"));

var _tree_node_type = _interopRequireDefault(require("./tree_node_type"));

var _tree_decorators_utils = require("./tree_decorators_utils");

function noop() {}

function ToggleDecorator(_ref) {
  var style = _ref.style;
  var height = style.height,
      width = style.width,
      arrow = style.arrow;
  return _react.default.createElement("div", {
    style: style.base
  }, _react.default.createElement("div", {
    style: style.wrapper
  }, _react.default.createElement(_components.Icons.ChevronRight, {
    height: height,
    width: width,
    style: arrow
  })));
}

ToggleDecorator.propTypes = {
  style: _propTypes.default.shape({
    width: _propTypes.default.number.isRequired,
    height: _propTypes.default.number.isRequired,
    arrow: _propTypes.default.object.isRequired
  }).isRequired
};

function ContainerDecorator(props) {
  var node = props.node,
      style = props.style,
      onClick = props.onClick;
  var container = style.container,
      restStyles = (0, _objectWithoutProperties2.default)(style, ["container"]);

  if (node.root) {
    return null;
  }

  var containerStyle = container.reduce(function (acc, styles) {
    return (0, _objectSpread2.default)({}, acc, styles);
  }, {});

  var innerContainer = _react.default.createElement(_reactTreebeard.decorators.Container, (0, _extends2.default)({}, props, {
    style: restStyles,
    onClick: noop
  }));

  if (node.type !== _tree_node_type.default.STORY) {
    return _react.default.createElement(_menu_item.default, {
      style: containerStyle,
      onClick: onClick,
      "data-name": node.name
    }, innerContainer);
  }

  var overrideParams = {
    selectedKind: node.kind,
    selectedStory: node.story
  };
  return _react.default.createElement(_routed_link.MenuLink, {
    active: node.active || undefined,
    overrideParams: overrideParams,
    onClick: onClick,
    "data-name": node.name
  }, innerContainer);
}

ContainerDecorator.propTypes = {
  style: _propTypes.default.shape({
    container: _propTypes.default.array.isRequired
  }).isRequired,
  node: _propTypes.default.shape({
    root: _propTypes.default.bool,
    type: _propTypes.default.oneOf([_tree_node_type.default.NAMESPACE, _tree_node_type.default.STORY]).isRequired,
    name: _propTypes.default.string.isRequired,
    kind: _propTypes.default.string,
    story: _propTypes.default.string,
    active: _propTypes.default.bool
  }).isRequired,
  onClick: _propTypes.default.func.isRequired
};

function HeaderDecorator(props) {
  var style = props.style,
      node = props.node,
      restProps = (0, _objectWithoutProperties2.default)(props, ["style", "node"]);
  var newStyle = style;

  if (node.type === _tree_node_type.default.STORY) {
    newStyle = (0, _objectSpread2.default)({}, style, {
      title: null
    });
  }

  var name = (0, _tree_decorators_utils.highlightNode)(node, style);
  var newNode = (0, _objectSpread2.default)({}, node, {
    name: name
  });
  return _react.default.createElement(_reactTreebeard.decorators.Header, (0, _extends2.default)({
    style: newStyle,
    node: newNode
  }, restProps));
}

HeaderDecorator.propTypes = {
  style: _propTypes.default.shape({
    title: _propTypes.default.object.isRequired,
    base: _propTypes.default.object.isRequired
  }).isRequired,
  node: _propTypes.default.shape({
    type: _propTypes.default.oneOf([_tree_node_type.default.NAMESPACE, _tree_node_type.default.STORY]),
    highlight: _propTypes.default.arrayOf(_propTypes.default.arrayOf(_propTypes.default.number))
  }).isRequired
};

var _default = (0, _objectSpread2.default)({}, _reactTreebeard.decorators, {
  Header: HeaderDecorator,
  Container: ContainerDecorator,
  Toggle: ToggleDecorator
});

exports.default = _default;