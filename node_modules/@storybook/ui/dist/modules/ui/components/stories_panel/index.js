"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _pick = _interopRequireDefault(require("lodash/pick"));

var _styled = _interopRequireDefault(require("@emotion/styled"));

var _components = require("@storybook/components");

var _stories_tree = _interopRequireDefault(require("./stories_tree"));

var _text_filter = _interopRequireDefault(require("./text_filter"));

var Wrapper =
/*#__PURE__*/
(0, _styled.default)("div", {
  target: "e1b9pp5i0"
})(function (_ref) {
  var isMobileDevice = _ref.isMobileDevice;
  return isMobileDevice ? {
    padding: '10px'
  } : {
    padding: '10px 0 10px 10px'
  };
});
var storyProps = ['selectedKind', 'selectedHierarchy', 'selectedStory', 'onSelectStory', 'storyFilter', 'sidebarAnimations'];

function hierarchyContainsStories(storiesHierarchy) {
  return storiesHierarchy && storiesHierarchy.map.size > 0;
} // This component gets a ref so it needs to be a class
// eslint-disable-next-line react/prefer-stateless-function


var StoriesPanel =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(StoriesPanel, _Component);

  function StoriesPanel() {
    (0, _classCallCheck2.default)(this, StoriesPanel);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(StoriesPanel).apply(this, arguments));
  }

  (0, _createClass2.default)(StoriesPanel, [{
    key: "render",
    value: function render() {
      var _this = this;

      var _this$props = this.props,
          isMobileDevice = _this$props.isMobileDevice,
          name = _this$props.name,
          onStoryFilter = _this$props.onStoryFilter,
          openShortcutsHelp = _this$props.openShortcutsHelp,
          shortcutOptions = _this$props.shortcutOptions,
          storiesHierarchies = _this$props.storiesHierarchies,
          storyFilter = _this$props.storyFilter,
          url = _this$props.url;
      return _react.default.createElement(Wrapper, {
        isMobileDevice: isMobileDevice
      }, _react.default.createElement(_components.Header, {
        name: name,
        url: url,
        openShortcutsHelp: shortcutOptions.enableShortcuts ? openShortcutsHelp : null,
        enableShortcutsHelp: shortcutOptions.enableShortcuts
      }), _react.default.createElement(_text_filter.default, {
        text: storyFilter,
        onClear: function onClear() {
          return onStoryFilter('');
        },
        onChange: function onChange(text) {
          return onStoryFilter(text);
        }
      }), storiesHierarchies.map(function (hierarchy) {
        return hierarchyContainsStories(hierarchy) && _react.default.createElement(_stories_tree.default, (0, _extends2.default)({
          key: hierarchy.name
        }, (0, _pick.default)(_this.props, storyProps), {
          storiesHierarchy: hierarchy
        }));
      }));
    }
  }]);
  return StoriesPanel;
}(_react.Component);

StoriesPanel.defaultProps = {
  storiesHierarchies: [],
  storyFilter: null,
  onStoryFilter: function onStoryFilter() {},
  openShortcutsHelp: null,
  isMobileDevice: false,
  name: '',
  url: '',
  shortcutOptions: {
    goFullScreen: false,
    showStoriesPanel: true,
    showAddonPanel: true,
    showSearchBox: false,
    addonPanelInRight: false,
    enableShortcuts: true
  }
};
StoriesPanel.propTypes = {
  storiesHierarchies: _propTypes.default.arrayOf(_propTypes.default.shape({
    namespaces: _propTypes.default.arrayOf(_propTypes.default.string),
    name: _propTypes.default.string,
    map: _propTypes.default.object
  })),
  storyFilter: _propTypes.default.string,
  onStoryFilter: _propTypes.default.func,
  openShortcutsHelp: _propTypes.default.func,
  isMobileDevice: _propTypes.default.bool,
  name: _propTypes.default.string,
  url: _propTypes.default.string,
  shortcutOptions: _propTypes.default.shape({
    goFullScreen: _propTypes.default.bool,
    showStoriesPanel: _propTypes.default.bool,
    showAddonPanel: _propTypes.default.bool,
    showSearchBox: _propTypes.default.bool,
    addonPanelInRight: _propTypes.default.bool,
    enableShortcuts: _propTypes.default.bool
  })
};
var _default = StoriesPanel;
exports.default = _default;