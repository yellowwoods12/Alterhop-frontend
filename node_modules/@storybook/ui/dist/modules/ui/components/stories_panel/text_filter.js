"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _styled = _interopRequireDefault(require("@emotion/styled"));

var _reactLifecyclesCompat = require("react-lifecycles-compat");

var _debounce = _interopRequireDefault(require("lodash/debounce"));

var defaultTextValue = '';
var Wrapper =
/*#__PURE__*/
(0, _styled.default)("div", {
  target: "eg9vth70"
})({
  position: 'relative'
});
var Input =
/*#__PURE__*/
(0, _styled.default)("input", {
  target: "eg9vth71"
})(function (_ref) {
  var theme = _ref.theme;
  return {
    fontSize: 12,
    color: '#828282',
    padding: 5,
    display: 'block',
    width: '100%',
    boxSizing: 'border-box',
    height: 26,
    background: theme.mainFill,
    border: '0 none',
    outline: 'none',
    borderRadius: 2
  };
});
var ClearButton =
/*#__PURE__*/
(0, _styled.default)("button", {
  target: "eg9vth72"
})({
  position: 'absolute',
  backgroundColor: 'transparent',
  color: '#868686',
  border: 'none',
  width: 25,
  height: 26,
  right: 1,
  top: 0,
  textAlign: 'center',
  cursor: 'pointer',
  lineHeight: '23px',
  fontSize: 20
});
var debounceFilterChangeTimeout = 500;

var TextFilter =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(TextFilter, _React$Component);

  function TextFilter(props) {
    var _this;

    (0, _classCallCheck2.default)(this, TextFilter);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TextFilter).call(this, props));
    _this.state = {};
    _this.onChange = _this.onChange.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));
    _this.fireOnClear = _this.fireOnClear.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));
    _this.changeFilter = (0, _debounce.default)(_this.changeFilter, debounceFilterChangeTimeout);
    return _this;
  }

  (0, _createClass2.default)(TextFilter, [{
    key: "onChange",
    value: function onChange(event) {
      var text = event.target.value;
      this.setState({
        query: text
      });
      this.changeFilter(text);
    }
  }, {
    key: "fireOnClear",
    value: function fireOnClear() {
      this.setState({
        query: defaultTextValue
      });
      var onClear = this.props.onClear;
      if (onClear) onClear();
    }
  }, {
    key: "changeFilter",
    value: function changeFilter(text) {
      var onChange = this.props.onChange;
      if (onChange) onChange(text);
    }
  }, {
    key: "render",
    value: function render() {
      var query = this.state.query;
      return _react.default.createElement(Wrapper, null, _react.default.createElement(Input, {
        autoComplete: "off",
        spellCheck: "false",
        type: "text",
        placeholder: "Filter",
        name: "filter-text",
        value: query || defaultTextValue,
        onChange: this.onChange
      }), query && query.length && _react.default.createElement(ClearButton, {
        onClick: this.fireOnClear,
        className: "clear"
      }, "\xD7"));
    }
  }]);
  return TextFilter;
}(_react.default.Component);

TextFilter.getDerivedStateFromProps = function (_ref2, _ref3) {
  var text = _ref2.text;
  var prevText = _ref3.prevText;

  if (text !== prevText) {
    return {
      query: text,
      prevText: text
    };
  }

  return null;
};

TextFilter.defaultProps = {
  text: defaultTextValue,
  onChange: null,
  onClear: null
};
TextFilter.propTypes = {
  // eslint-disable-next-line react/no-unused-prop-types
  text: _propTypes.default.string,
  onChange: _propTypes.default.func,
  onClear: _propTypes.default.func
};
(0, _reactLifecyclesCompat.polyfill)(TextFilter);
var _default = TextFilter;
exports.default = _default;