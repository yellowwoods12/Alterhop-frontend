/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the terms of the LICENSE file distributed with this project.
 */
import * as tslib_1 from "tslib";
import { Classes, Menu, MenuItem } from "@blueprintjs/core";
import React from "react";
import { DATERANGEPICKER_SHORTCUTS } from "./common/classes";
import { clone, isDayRangeInRange } from "./common/dateUtils";
var Shortcuts = /** @class */ (function (_super) {
    tslib_1.__extends(Shortcuts, _super);
    function Shortcuts() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Shortcuts.prototype.render = function () {
        var _this = this;
        var shortcuts = this.props.shortcuts === true
            ? createDefaultShortcuts(this.props.allowSingleDayRange)
            : this.props.shortcuts;
        var shortcutElements = shortcuts.map(function (s, i) { return (React.createElement(MenuItem, { className: Classes.POPOVER_DISMISS_OVERRIDE, disabled: !_this.isShortcutInRange(s.dateRange), key: i, onClick: _this.getShorcutClickHandler(s.dateRange), text: s.label })); });
        return React.createElement(Menu, { className: DATERANGEPICKER_SHORTCUTS }, shortcutElements);
    };
    Shortcuts.prototype.getShorcutClickHandler = function (nextValue) {
        var _this = this;
        return function () { return _this.props.onShortcutClick(nextValue); };
    };
    Shortcuts.prototype.isShortcutInRange = function (shortcutDateRange) {
        return isDayRangeInRange(shortcutDateRange, [this.props.minDate, this.props.maxDate]);
    };
    return Shortcuts;
}(React.PureComponent));
export { Shortcuts };
function createShortcut(label, dateRange) {
    return { dateRange: dateRange, label: label };
}
function createDefaultShortcuts(allowSingleDayRange) {
    var today = new Date();
    var makeDate = function (action) {
        var returnVal = clone(today);
        action(returnVal);
        returnVal.setDate(returnVal.getDate() + 1);
        return returnVal;
    };
    var yesterday = makeDate(function (d) { return d.setDate(d.getDate() - 2); });
    var oneWeekAgo = makeDate(function (d) { return d.setDate(d.getDate() - 7); });
    var oneMonthAgo = makeDate(function (d) { return d.setMonth(d.getMonth() - 1); });
    var threeMonthsAgo = makeDate(function (d) { return d.setMonth(d.getMonth() - 3); });
    var sixMonthsAgo = makeDate(function (d) { return d.setMonth(d.getMonth() - 6); });
    var oneYearAgo = makeDate(function (d) { return d.setFullYear(d.getFullYear() - 1); });
    var twoYearsAgo = makeDate(function (d) { return d.setFullYear(d.getFullYear() - 2); });
    var singleDayShortcuts = allowSingleDayRange
        ? [createShortcut("Today", [today, today]), createShortcut("Yesterday", [yesterday, yesterday])]
        : [];
    return singleDayShortcuts.concat([
        createShortcut("Past week", [oneWeekAgo, today]),
        createShortcut("Past month", [oneMonthAgo, today]),
        createShortcut("Past 3 months", [threeMonthsAgo, today]),
        createShortcut("Past 6 months", [sixMonthsAgo, today]),
        createShortcut("Past year", [oneYearAgo, today]),
        createShortcut("Past 2 years", [twoYearsAgo, today]),
    ]);
}
//# sourceMappingURL=shortcuts.js.map